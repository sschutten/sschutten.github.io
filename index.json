[{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"Introduction ARM templates follow the Desired State Configuration (DSC) pattern. This means that the ARM template describes what the desired Azure infrastructure should look like. When an ARM template is applied to an Azure environment, the differences between the template and the current state are calculated and applied. The end result is an environment that conforms to the ARM template.\nWhile this is true for many of the Azure resources, it may not always be true for properties of ARM resources. A few examples are App Service App Settings (Configuration as it\u0026rsquo;s called in the Azure Portal) and Key Vault Access Policies. In these particular cases the last deployment replaces the complete set of app settings or access policies. This isn\u0026rsquo;t exactly what you would expect and certainly not what you\u0026rsquo;d want.\nBicep We\u0026rsquo;ve recently started using Bicep instead of ARM templates. With Bicep, Microsoft starts treating ARM templates as Intermediate Language (IL). In other words, you\u0026rsquo;re encouraged no longer to write ARM templates directly, but instead use one of the higher level languages like Bicep. If you haven\u0026rsquo;t heard of the Bicep language for ARM templates, you should definitely check it out. It makes authoring Azure deployments so much easier.\nThe WEBSITE_RUN_FROM_PACKAGE paradox I ran into an issue recently where I needed to create an Azure Function and publish the code for it. A good practice is to run your Azure Functions from a package file. When you do so your files are deployed as a zip package instead of separate files. For Azure Functions to understand that you\u0026rsquo;re running from a package file, a configuration setting WEBSITE_RUN_FROM_PACKAGE with a value of 1 is added to the configuration of the Azure Function once you publish your function.\nThis introduces the following paradox:\n An empty Azure Function (one without code published to it) can only be deployed to when the WEBSITE_RUN_FROM_PACKAGE settings doesn\u0026rsquo;t exist or its value is 0 An Azure Function running a package can only be deployed to when the WEBSITE_RUN_FROM_PACKAGE setting has a value of 1  See the problem? We could do two things:\n Include the WEBSITE_RUN_FROM_PACKAGE setting in the ARM template. This would make the Azure Function host unreachable when we initially create the resource, so we can\u0026rsquo;t deploy anything to it. Not include the WEBSITE_RUN_FROM_PACKAGE setting in the ARM template. Everything would be fine when the resources is created initially, but with every update the ARM template would remove the WEBSITE_RUN_FROM_PACKAGE setting from the configuration and the Azure Function would become unreachable for deployment.  Merging App Settings The solution would be to merge the app settings, so that when a package file is deployed and the WEBSITE_RUN_FROM_PACKAGE setting exists, it is preserved. It can be done with ARM templates, but it\u0026rsquo;s a lot easier with Bicep.\nTo merge app settings (and this concept should translate to access policies as well) we use two Bicep files:\n main.bicep, which is our regular Bicep template appSettings.bicep, which is a Bicep module that we call from main.bicep and takes care of applying the app settings  AppSettings.bicep The appSettings.bicep module is fairly simple. It takes two parameters:\n currentAppSettings, containing the current app settings appSettings, the new app settings to apply  It uses the union function to combine the current with the new app settings and apply them to the app service. The combine function automatically removes duplicate values where the values of the last parameter win.\nparam currentAppSettings object param appSettings object  resource siteconfig \u0026#39;Microsoft.Web/sites/config@2020-12-01\u0026#39; = {  name: myAwesomeFunction/appSettings  properties: union(currentAppSettings, appSettings) } Main.bicep In the main.bicep file you create the app service as usual. Then we call the appSettings.bicep module and use the list function to retrieve the current app settings and forward it to the module.\nYour main.bicep should look a little like this:\nresource appServicePlan \u0026#39;Microsoft.Web/serverfarms@2020-12-01\u0026#39; existing = {  name: \u0026#39;myAppServicePlan\u0026#39; }  resource myAwesomeFunction \u0026#39;Microsoft.Web/sites@2020-12-01\u0026#39; = {  name: \u0026#39;myAwesomeFunction\u0026#39;  location: resourceGroup().location  kind: \u0026#39;functionapp\u0026#39;  properties: {  serverFarmId: appServicePlan.id  } }  module appSettings \u0026#39;appSettings.bicep\u0026#39; = {  name: \u0026#39;myAwesomeFunction-appSettings\u0026#39;  params: {  currentAppSettings: list(\u0026#39;{apiWebApp.id}/config/appsettings\u0026#39;, \u0026#39;2020-12-01\u0026#39;).properties  appSettings: {  \u0026#39;Foo\u0026#39;: \u0026#39;Bar\u0026#39;  }  } } ","date":"April 19, 2021","hero":"/posts/2021/04/merge-appsettings-with-bicep/hero.png","permalink":"https://sschutten.github.io/posts/2021/04/merge-appsettings-with-bicep/","summary":"Introduction ARM templates follow the Desired State Configuration (DSC) pattern. This means that the ARM template describes what the desired Azure infrastructure should look like. When an ARM template is applied to an Azure environment, the differences between the template and the current state are calculated and applied. The end result is an environment that conforms to the ARM template.\nWhile this is true for many of the Azure resources, it may not always be true for properties of ARM resources.","tags":null,"title":"Merge App Settings With Bicep"},{"categories":["Flow","Logic Apps","Concurrency"],"contents":"Microsoft Flow and Azure Logic Apps are based on the same platform and therefor very similar. There are, however, cases where they\u0026rsquo;re a little different. Take for example the Apply to each (Flow) action and the For each (Logic Apps) action. They\u0026rsquo;re very similar in that they execute the actions for each of the items in the array. There\u0026rsquo;s one caveat though and that is the default concurrency setting.\n Apply to each action\n  The concurrency setting can be found when looking at the settings of the action and controls how many concurrent items, or items in parallel, the action can process. The Apply to each action processes items sequentially by default, while the For each action processes items concurrently by default.\n Apply to each concurrency settings\n  When moving from Flow to Logic Apps this may introduce unexpected results if you\u0026rsquo;re not aware of this difference. For example if you\u0026rsquo;re used to work in Flow and update variables inside the scope of the Apply to each action, you would be surprised that to see that at the end of the run the value of your variable isn\u0026rsquo;t the same as what you got in Flow. The reason for this is that in Logic Apps the variable may be updated by any of the 20 concurrent items at a point in time. Therefor I advice against the use of variables inside a For each action and use the Compose action instead. To get the same functionality as in Flow you can always override the concurrency control and limit the degree of parallism to 1.\nI hope this little nugget helps you when you move between Flow and Logic Apps and vice-versa. At least it surprised me when I discovered it.\n","date":"October 1, 2019","hero":"/posts/2019/10/difference-between-apply-to-each-and-for-each-actions/hero.png","permalink":"https://sschutten.github.io/posts/2019/10/difference-between-apply-to-each-and-for-each-actions/","summary":"Microsoft Flow and Azure Logic Apps are based on the same platform and therefor very similar. There are, however, cases where they\u0026rsquo;re a little different. Take for example the Apply to each (Flow) action and the For each (Logic Apps) action. They\u0026rsquo;re very similar in that they execute the actions for each of the items in the array. There\u0026rsquo;s one caveat though and that is the default concurrency setting.\n Apply to each action","tags":["Flow","logic apps","concurrency"],"title":"Difference between Apply to each and For each actions"},{"categories":["Chatbots","Conversational AI"],"contents":"We\u0026rsquo;re living in the decade of the rise of conversational platforms like chatbots. Gartner predicts that by 2022 over 70% of modern workers use conversational platforms on a daily basis. Chatbots are around for many years, even dating back to 1966, with fluctuating interest over time. The last few years we see a big increase of excitement for chatbots with artificial intelligence (AI) becoming mainstream. The use of AI enables chatbots to better understand natural language and be able to more intelligently respond to users.\nOne place where we see particular interest for chatbots is Microsoft Teams. Microsoft Teams is the hub for teamwork in Office 365. Chatbots have been part of the extensibility story of Microsoft Teams from day one. It\u0026rsquo;s easy to get started with chatbots for Microsoft Teams, but it\u0026rsquo;s hard to build a truly effective bot. Granted, there are a lot of tools and platforms available, allowing you to quickly create a query based chatbot using natural language. Most of the time these chatbots are glorified search engines and offer little to no real value for organisations. For chatbots to really stand out, they need to extend beyond the question and answer stage.\nIntelligent chatbots Intelligent chatbots feature a set of common traits:\n An intelligent chatbot does one set of tasks and does it well. Chatbots are not to be confused with virtual assistants like Amazon Alexa, Google Assistant or Microsoft Cortana, which can do a lot of different tasks. Keep the set of tasks that the bot performs narrow and of the same type. It\u0026rsquo;s easier for people to understand what your bot can do for them and it\u0026rsquo;s better discoverable. It\u0026rsquo;s more feasible to make it do well what it\u0026rsquo;s designed for if you can focus on a limited set of functions, thus making its users happy. Be there at the right time, at the right place. Intelligent chatbots bring the information to the user instead of having the user ask for it. Being proactive is a big plus over the traditional query-based chatbots and greatly reduces the number of actions people have to perform. Most importantly, people feel supported in their work when they notice the chatbot works for them. Of great importance is to reach out to the user at the right time and the right place. What the right time and place is differs per scenario. For example, if the chatbot needs input from the user, it should ask for it during office hours (the right time). Or your chatbot only sends a message to people in the office (the right place). Fail gracefully. Due to the more natural way people interact with chatbots they expect more human behavior and a less forgiving. The first thing people tend to do with chatbots the first time they try is to break it. It\u0026rsquo;s therefor important for the chatbot to always fail gracefully and keep confidence high. For example, the chatbot should be able to respond to simple chitchat and offer a nice way out if the chatbot is unable to handle the user\u0026rsquo;s request. Speak with a consistent tone, emotion and personality. People have a welcome experience with a chatbot if the tone and personality is consistent and in line with corporate culture. In a large enterprise organisation it may make more sense to use a more formal tone, while in a startup a more witty personality may be preferred.  The InSpark intelligent chatbot platform While it\u0026rsquo;s easy to develop a \u0026lsquo;dumb\u0026rsquo; chatbot, it requires significantly more effort to create a chatbot that rises above the normal. In our experience with developing chatbots we\u0026rsquo;ve noticed that much time is spent into laying the ground work for a chatbot. A lot of that work is repetitive between bots and slows down chatbot development significantly. To lower the threshold to build advanced chatbots we, at InSpark, set out to build an intelligent chatbot platform. The goal of the platform is to make it easy to build and extend intelligent chatbots, with a strong focus on proactive scenario\u0026rsquo;s. The intelligent chatbot platform builds further on the Microsoft Bot Framework, but offers a couple of additional core features:\n Quickly create chatbots without the need to install or configure. Our recommendation is to keep chatbots small and focused on a set of tasks. This means you need to be able to quickly setup a chatbot and start adding value, while not being bothered by all the foundational work. Give your chatbot an identity in the form of a name, description and logo and you\u0026rsquo;re good to go. We like to call it our Chatbot Platform as a Service, or CPaaS in short. Low-code extensibility of the chatbot. Low-code means little to no programming code is required to extend the chatbot. The chatbot platform comes with a connector for Microsoft Flow and Azure Logic Apps to add new dialogs to the chatbot. Citizen developers who are familiar with Microsoft Flow or Azure Logic Apps can quickly and easily create complex dialogs, including integrations with numerous third party applications. The connector includes actions to initiate dialogs by the bot, making it very easy to built various proactive scenario\u0026rsquo;s. Chitchat is built in. Each chatbot comes preloaded with a chitchat knowledge base so people can start chatting with the chatbot.  The lunch bot: an example scenario A very simple, but very appealing, scenario is that of our own InSpark lunch bot. At InSpark we can participate in the company lunch. If you do so, a small fee per lunch is deducted from your salary. We trust our colleagues and rely on them to write down if they used the lunch on a particular day. Until recently it was a manual and cumbersome process that we wanted to simplify. The way we did it is by introducing the lunch bot.\nEach day somewhat after lunch, the lunch bot jumps to life and asks all employees in the office that day a simple question: did you use the lunch today? To make it even easier for the employees they just need to tap either the \u0026lsquo;Yes\u0026rsquo; or \u0026lsquo;No\u0026rsquo; button and they\u0026rsquo;re done for the day. Their answer is recorded in a database and the HR employees can review the answers through a Power BI dashboard.\nWhile this may look like a very simple scenario, it\u0026rsquo;s in fact a very powerful one if you consider the following:\n The lunch bot\n   The right place. The lunch bot only sends the question to employees that are likely to be in the office that day. While many of us are sometimes in the office, but not every day, we wanted to avoid spamming our employees if they\u0026rsquo;re not in the office. There are multiple ways to do it, but we chose to look at the location where people signed in with their Azure AD account on that day. The right time. The lunch bot is scheduled to send out the question right after lunch. At the time we chose people most likely returned to their laptops, so chances are high they see the question and can quickly answer it. Off course they also get the question on their mobile phone and can answer it there. Fail gracefully. If the employee doesn\u0026rsquo;t respond within an hour or so, the lunch bot repeats the question. We\u0026rsquo;ve carefully crafted the wording of the repeated question to let the employees know we understand they may be busy. We give the employees another two hours to respond. If the grace period passes, the lunch bot for the final time reaches out to the employees to acknowledge they are busy and notify HR to check in with them. Employees can change their answer. A good chatbot scenario covers multiple angles. In this case there may be reasons employees didn\u0026rsquo;t get the question from the lunch bot or they want to change their answer. Employees can tell the bot in natural language they had lunch (or not) on any day. For example \u0026lsquo;I didn\u0026rsquo;t use lunch yesterday\u0026rsquo;. Tone and personality. We\u0026rsquo;re a relatively small company with a geeky culture, and the lunch bot matches that culture in its tone and personality. For example, we\u0026rsquo;ve made some additional effort to include a bunch of random \u0026rsquo;thank you\u0026rsquo; gifs to spice up the conversation and give the employees a sense of freshness each day.  Conclusion Developing true intelligent chatbots is hard, but the InSpark intelligent chatbot platform reduces the burden to a point where it starts to become easy and fun. In this blog post we\u0026rsquo;ve just touched the tip of the iceberg and gave a brief impression of what the intelligent chatform platform is capable of. In next blog posts we\u0026rsquo;ll dive deeper into the various pieces of the chatbot platform and explain in more detail how we\u0026rsquo;ve setup some of our chatbot scenario\u0026rsquo;s like the lunch bot.\n","date":"September 25, 2019","hero":"/posts/2019/09/intelligent-digital-assitants/hero.jpg","permalink":"https://sschutten.github.io/posts/2019/09/intelligent-digital-assitants/","summary":"We\u0026rsquo;re living in the decade of the rise of conversational platforms like chatbots. Gartner predicts that by 2022 over 70% of modern workers use conversational platforms on a daily basis. Chatbots are around for many years, even dating back to 1966, with fluctuating interest over time. The last few years we see a big increase of excitement for chatbots with artificial intelligence (AI) becoming mainstream. The use of AI enables chatbots to better understand natural language and be able to more intelligently respond to users.","tags":null,"title":"Intelligent chatbots for Microsoft Teams"},{"categories":["Edge","Profiles","Tricks"],"contents":"Ever since Microsoft announced the next version of Edge will be based on Chromium and provided the Edge Insider program I\u0026rsquo;ve been happily running the Dev channel of Edge. If you haven\u0026rsquo;t tried yet, you should. It\u0026rsquo;s that good.\nOne of the benefits of the Chromium based Edge is that it brings profiles to Edge. Profiles are great, because they allow you to have separate profiles for different purposes, e.g. a work profile and a personal profile. Each profile is completely isolated and has their own extensions, favorites and passwords. This is particularly great if you have many accounts, like in my case, where I have accounts for each of the customers I work for.\nProfiles are nothing new of course. Chome has them for quite some time (since Chrome is obviously also based on Chromium), but also Firefox offers this feature. I\u0026rsquo;ve come to like the Chromium implementation of profiles better because each profile is sandboxed, in contrary to Firefox. The thing bothering me with all implementations of profiles is the limited options to identify the profiles.\nFirefox Firefox allows you to pick a color and an icon from a very limited set of options. All profiles live as separate tabs in the same Firefox window. The color is shown in the tab, but you would need to remember which color is which profile. If you have many you simply run out of colors and the icons can\u0026rsquo;t really describe the profile properly.\n Chome Chome uses a different approach where each profile is a separate window. You can recognize the active profile of each window in the task bar by the icon you selected.\n I have to give it to Chrome that they offer a nice set of icons. There are a bit more icons available than in Chrome, but you\u0026rsquo;re still limited to the icons that come with Chrome. In addition Chrome can use your Google account image as the icon, but that means you must have a Google account for each of the profiles you use.\n Edge In my case I have multiple Microsoft organization (Office 365) and personal accounts. The new Edge also comes with a limited set of icons to choose from, but like Chrome, you can use the account image as an icon. With the new Edge, however, you can sign in with an Office 365 account and use that image!\nSetting it up To set this up, first we add a new profile to Edge. Click the profile icon in the top right of Edge and choose Add a profile. Give your profile the name you want. I named mine Demo. A new Edge window will open for the newly created profile. Note that I\u0026rsquo;m signed in to my PC with my Office 365 account, which is automatically picked up by Edge.\n Next we must be sure the account we want to associate with the profile has a profile picture. Navigate to https://portal.office.com and sign in with the account. Once signed in, open the account page by clicking the account button in the top right and choosing My Office profile.\n If My Office profile is missing and you only see My account it probably means your account doesn\u0026rsquo;t have an active Office 365 license assigned. This trick with the profile picture won\u0026rsquo;t work for those accounts.\n Change the profile picture to whatever photo you want to use. It may take some time before your photo is available everywhere.\n After waiting for some time (up to a few hours may be necessary), go to Edge, click the profile button and choose to sign in and sign in with your Office 365 account.\n Once you\u0026rsquo;re signed in, Edge may select the profile picture automatically. If it doesn\u0026rsquo;t it probably means you needs to wait a bit longer for the picture to become available. At any time, check if the profile picture is available to clicking the profile icon in Edge and select Manage profile settings.\nClick Edit and once the profile picture is available, the blank profile icon is replaced by your profile picture and you\u0026rsquo;re able to select it. It may be necessary to restart Edge if your profile picture doesn\u0026rsquo;t show up.\n Conclusion There you go! You can now have multiple profiles, each with their own specific icons. I use this trick to create profiles with the logo of the customer account simply by setting the profile picture of the account to be the customer logo.\n","date":"August 12, 2019","hero":"/posts/2019/08/edge-multi-profile-with-custom-images/hero.png","permalink":"https://sschutten.github.io/posts/2019/08/edge-multi-profile-with-custom-images/","summary":"Ever since Microsoft announced the next version of Edge will be based on Chromium and provided the Edge Insider program I\u0026rsquo;ve been happily running the Dev channel of Edge. If you haven\u0026rsquo;t tried yet, you should. It\u0026rsquo;s that good.\nOne of the benefits of the Chromium based Edge is that it brings profiles to Edge. Profiles are great, because they allow you to have separate profiles for different purposes, e.g. a work profile and a personal profile.","tags":["Edge","Profiles","Tricks"],"title":"Custom profile images in Edge"},{"categories":["signalr","spfx"],"contents":"SignalR is a great technology to provide users with real-time UI updates of events happening in the back-end. It\u0026rsquo;s a perfect match with SPFX to build some amazing web parts for SharePoint. With the recent release of ASPNET SignalR Core (now incorporated in the ASP.NET Core GitHub project) SignalR is easier to use than before. So you\u0026rsquo;ve gone and created a web part that connects to a SignalR hub and the experience makes a real impact for your users. But how do you ensure only allowed people can connect to the SignalR hub? That\u0026rsquo;s what this blog post will get into.\nThis blog post covers the following scenario: you have an SPFX that connects to a SignalR hub and you want to authorize people to the hub using Azure Active Directory. I\u0026rsquo;ve had a lot of help from Sergei Sergeev\u0026rsquo;s post [Call Azure AD secured API from your SPFx code. Story #2: Web app (or Azure Function) and SPFx with adal.js](http://spblog.net/post/2018/07/29/Call-Azure-AD-secured-API-from-your-SPFx-code-Story-2-Web-app-(or-Azure-Function). Go visit his blog, it\u0026rsquo;s full of relevant details.\nWe\u0026rsquo;ll be using SPFX framework version 1.6 and ASP.NET SignalR Core. Setting up authentication to flow from SharePoint to the SignalR hub breaks down into the following steps:\n Add new app registration in Azure AD Enable authentication in the SignalR hub Modify web part to connect to SignalR hub using obtained token Allow SharePoint user impersonation  1. Add new app registration in Azure AD This step is similar to the step outlined in Sergei\u0026rsquo;s blog, but I\u0026rsquo;ll repeat it here for sake of completeness. In Azure Portal, click Azure Active Directory -\u0026gt; App Registrations. Create a new application registration of type Web app/API and give it a name. Since the sign-on URL won\u0026rsquo;t be used you can pick anything. Let\u0026rsquo;s use https://localhost:44351/signin-oidc for now:\n Copy the Application ID from the properties. We need it in the next step. You should also copy your Tenant ID. You can find your Tenant Id in the properties section of the Azure Active Directory pane in the Azure Portal. It\u0026rsquo;s called Directory ID.\n2. Enable authentication in the SignalR hub To enable Azure AD authentication we first need to add the NuGet package Microsoft.AspNetCore.Authentication.AzureAD.UI to the ASP.NET Core project that hosts the SignalR hub. At this time of writing the lastest stable version is 2.1.1.\nOnce the NuGet package is added, we enable authentication by making a few modifications to the code.\nWe need to set up the configuration of the service principal that we created in the previous step. During development we use the Secrets Manager tool to prevent our secrets ending up in version control. The Secret Manager tool stores sensitive data during the development of an ASP.NET Core project. App secrets are stored in a separate location from the project tree. The ASP.NET Core Configuration API provides access to Secret Manager secrets. Therefor we don\u0026rsquo;t need to do anything special to access the secrets stored using the Secret Manager.\nRight click the ASP.NET project and choose \u0026lsquo;Manage User Secrets\u0026rsquo;. Visual Studio will create a secrets.json file for you and associates it with your project.\n Add the following configuration section to the secrets.json using the values you copied in the previous step.\n{  \u0026#34;AzureAd\u0026#34;: {  \u0026#34;Instance\u0026#34;: \u0026#34;https://login.microsoftonline.com/\u0026#34;,  \u0026#34;TenantId\u0026#34;: \u0026#34;\u0026lt;your Tenant ID\u0026gt;\u0026#34;,  \u0026#34;ClientId\u0026#34;: \u0026#34;\u0026lt;the App ID\u0026gt;\u0026#34;,  \u0026#34;CallbackPath\u0026#34;: \u0026#34;/signin-oidc\u0026#34;  } } Add a constructor to the Startup class that takes in the IConfiguration dependency and stores it in a local field. This allows us to easily access the configuration in later lifecycle methods. See the following snippet for details. The snippet also shows you how to get other properties through dependency injection like IHostingEnvironment and ILoggerFactory.\npublic class Startup {  private readonly IConfiguration _config;  // ...   public Startup(IHostingEnvironment env,  IConfiguration config,  ILoggerFactory loggerFactory)  {  _config = config;  // ...  }   // ... } Next add a call to the AddAuthentication extension method on the IServiceCollection in the ConfigureServices lifecycle method of the Startup class. We configure it to use the default Bearer authentication scheme. We furthermore enable Cookie authentication and provide the config for the Azure AD Bearer authentication. The Bind(...) method takes the config from the AzureAd section and attempts to map it to the AzureAdOptions class.\npublic void ConfigureServices(IServiceCollection services) {  // ...   services.AddAuthentication(AzureADDefaults.BearerAuthenticationScheme)  .AddCookie()  .AddAzureADBearer(options =\u0026gt; _config.Bind(\u0026#34;AzureAd\u0026#34;, options)); } Add a call to the UseAuthentication extension method on the IApplicationBuilder in the Configure lifecycle method of the Startup class. This tells ASP.NET Core to actually use the authentication that we\u0026rsquo;ve configured in the ConfigureServices method. Make sure to call the UseAuthentication method before the call to UseSignalR as it can give unexpected results if you add it after.\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env) {  app.UseAuthentication();   app.UseAzureSignalR(routes =\u0026gt;  {  routes.MapHub\u0026lt;MyHub\u0026gt;(\u0026#34;/myHub\u0026#34;);  }); } Finally we tell the hub that we require authenticated users by adding the Authorize attribute to the hub class, as demonstrated in the following snippet.\n[Authorize] public class MyHub : Hub {  // ... } Allright, we\u0026rsquo;ve now set up our hub! Test it out and discover that your web part can no longer connect to the SignalR hub because it must be authenticated. So far so good. Now lets fix the web part.\n3. Modify web part to connect to SignalR hub using obtained token In order to be able to obtain a token to authorize to the SignalR hub with, we must declare the user_impersonate permission in the package-solution.json file. This permission allows the SharePoint Online Client Extensibility service principal to call web api\u0026rsquo;s as the logged in user. Open the file and add the webApiPermissionRequests element. Use the App ID (or full name of the app registration) as value for the resource.\n{  \u0026#34;$schema\u0026#34;: \u0026#34;https://developer.microsoft.com/json-schemas/spfx-build/package-solution.schema.json\u0026#34;,  \u0026#34;solution\u0026#34;: {  ...  \u0026#34;webApiPermissionRequests\u0026#34;: [  {  \u0026#34;resource\u0026#34;: \u0026#34;\u0026lt;App ID\u0026gt;\u0026#34;,  \u0026#34;scope\u0026#34;: \u0026#34;user_impersonation\u0026#34;  }  ]  },  ... } To authenticate with the SignalR hub we need to send a bearer token when connecting. This means we need to obtain a token and telling SignalR to use that token. Usually we would use the new AadHttpClient to call an API, as this would hide all the ADAL plumbing we need to do to get a token and call the API with the token. Unfortunately we can\u0026rsquo;t use the AadHttpClient with SignalR because it doesn\u0026rsquo;t implement the full HttpClient stack. Fortunately the AadHttpClient uses the AadTokenProvider that\u0026rsquo;s available to us. We will use the token provider to obtain the token and it will do all the magic for us.\nTo get the AadTokenProvider we must ask the AadTokenProviderFactory to give us one. The AadTokenProviderFactory is available through the WebPartContext of the BaseClientSideWebPart class. In my case I send the AadTokenProviderFactory as a prop to my React component that does the actual visualization, like this:\nexport default class MySampleWebPart extends BaseClientSideWebPart\u0026lt;IMySampleWebPartProps\u0026gt; {   public render(): void {  const element: React.ReactElement\u0026lt;IMySampleProps\u0026gt; = React.createElement(  MySample,  {  aadTokenProviderFactory: this.context.aadTokenProviderFactory  }  );   ReactDom.render(element, this.domElement);  }   // ... } In the React component, add a method to get the token. Later we\u0026rsquo;ll tell the SignalR connection to use this method to get the authorization token. First we get the token provider and then we use the token provider to give us a token for our SignalR hub. The resourceEndpoint parameter should be the URL to your hub.\n Note that in my sample I use async/await to handle Promises as this is much easier to read. I would suggest you start using async/await too, but if you like you can use plain Promises instead.\n private async getAccessToken() {  var tokenProvider = await this.props.aadTokenProviderFactory.getTokenProvider();  return await tokenProvider.getToken(\u0026#34;\u0026lt;Hub Endpoint\u0026gt;\u0026#34;); } As I mentioned a little earlier we now need to tell the SignalR connection to use this method to obtain the tokens. The withUrl method of the HubConnectionBuilder allows us to specify the IHttpConnectionOptions. One of the options is the accessTokenFactory. We set the assetTokenFactory to be our getAccessToken method, like in the following snippet.\nthis.connection = new signalR.HubConnectionBuilder()  .withUrl(url, { accessTokenFactory = this.getAccessToken })  .build(); 4. Allow SharePoint user impersonation OK, awesome, we\u0026rsquo;re done with modifying our web part code. We\u0026rsquo;re almost there, but before we can actually test our web part we need to approve the user_impersonation permission we declared in our web part. We need to do this in the SharePoint tenant where we want to use or test this web part. You can do this using Powershell, but I\u0026rsquo;ll save that for another post. For now we\u0026rsquo;re going to use the SharePoint admin center.\nPackage up your web part and upload the sppkg to the SharePoint app catalog as you\u0026rsquo;d normally do. By uploading the sppkg to the app catalog, SharePoint will discover the declared permissions in your package.solution.json. Once you\u0026rsquo;ve uploaded your package to the app catalog move to your SharePoint admin center (usually https://-admin.sharepoint.com). Click \u0026rsquo;try it now\u0026rsquo; to switch to the new SharePoint admin center if it\u0026rsquo;s not yet your default and choose \u0026lsquo;API management\u0026rsquo; from the menu on the left.\n This will list you all the permissions pending approval. You should be able to find the user_impersonation permission as requested by your web part. Approve the permission.\n That\u0026rsquo;s it! You\u0026rsquo;re now able to test your web part and this time it should be able to connect to your SignalR hub using authentication.\n Note that once you enable authentication you must always test your web part in the hosted workbench. The reason for this is perhaps obvious: in order to obtain a token and authenticate to the SignalR hub you must be logged in with a valid Office 365 account.\n ","date":"December 11, 2018","hero":"/posts/2018/12/connect-azure-ad-authenticated-signalr-hub-from-spfx/hero.png","permalink":"https://sschutten.github.io/posts/2018/12/connect-azure-ad-authenticated-signalr-hub-from-spfx/","summary":"SignalR is a great technology to provide users with real-time UI updates of events happening in the back-end. It\u0026rsquo;s a perfect match with SPFX to build some amazing web parts for SharePoint. With the recent release of ASPNET SignalR Core (now incorporated in the ASP.NET Core GitHub project) SignalR is easier to use than before. So you\u0026rsquo;ve gone and created a web part that connects to a SignalR hub and the experience makes a real impact for your users.","tags":["signalr","spfx"],"title":"Connect to Azure AD secured SignalR Hub from your SPFx code"},{"categories":["Serverless","Logic Apps","Visual Studio","Azure","Improvements","Connectors"],"contents":"I must say that Logic Apps has come a long way in its brief lifetime. It\u0026rsquo;s surprisingly easy to get up and go with Logic Apps and the number of available connectors is crazy. However there are still a couple of things that could be improved to make it friendlier for the more serious applications. Here\u0026rsquo;s my list.\nThe last few weeks I had the chance to spend a lot of time with Azure Logic Apps. I\u0026rsquo;ve done some logic apps before, but that was about a year ago and a lot has changed. So I was looking forward to what has been changed and what the current state of logic apps is today. Can it rival the reliability and flexibility of BizTalk Server? After all, that\u0026rsquo;s what I, and probably the majority of Microsoft integration specialists, compare it to.\nDesigner The first number of improvement suggestions are regarding the designer experience. The designer has been tweaked quite a bit over time. I still remember one day the layout has changed from horizontal to vertical. It appears the designer has been greatly improved, however there are still a few things that annoy me or could make my life easier.\nWorking with input fields is wonky This annoys me quite a bit, especially because working with input fields is the most frequently performed activity when working on a logic app. When working with input fields, you can type in some static text or pick dynamic content from the fly-out dialog. In general it works, but there are a few flaws that make working with the input fields not a nice experience:\n Selected dynamic content doesn\u0026rsquo;t always show up in the input field. When this happens I have to refocus the field and try again. Pressing backspace one time too often makes the browser go back a page. Of course this is only an issue when working in the browser instead of Visual Studio. It would be nice to show a \u0026lsquo;You\u0026rsquo;re leaving this page, are you sure\u0026rsquo; dialog. When combining dynamic and static content in a single field, it\u0026rsquo;s difficult to position the cursor.  Sometimes not all fields visible in dynamic content dialog This one is also a bit annoying. Sometimes the designer tells me there\u0026rsquo;s no dynamic content available or it isn\u0026rsquo;t showing all fields, even though I\u0026rsquo;m sure a particular field is there. Most of the times this can be fixed by removing and reapplying the focus of an input field. In a few occasions it\u0026rsquo;s just not working at all and I have to revert to code view.\nUsing dynamic content in expressions A more advanced scenario perhaps is using dynamic content in expressions. The dynamic content dialog has two tabs. The first is for selecting dynamic content that is generated from connectors and actions. The second is for selecting expressions like concat(). Most of the times an expression is used in conjunction with one or more dynamic content properties. It would be nice if a more \u0026lsquo;Excel-like\u0026rsquo; experience is supported where you can type part of an expression, switch to the dynamic content tab and select a property. Or alternatively you get code completion in the expression editor. I\u0026rsquo;ve been able to do this once, but it\u0026rsquo;s not a very reliable or repeatable process.\nSelect body of previous actions It\u0026rsquo;s relatively easy to select properties (apart from the few issues I\u0026rsquo;ve described above). However it would be nice if we could simply select the body from previous actions as well. Right now we need to type in the expression body(\u0026hellip;) manually. At least, that\u0026rsquo;s as far as I know. If there\u0026rsquo;s a better way, please let me know.\nTyping slow in Visual Studio I\u0026rsquo;ve witnessed this a few times when working in Visual Studio. Typing in the action input fields is sometimes terribly slow. I haven\u0026rsquo;t been able to reproduce it reliably, but I do think it has something to do with internet bandwidth, for some reason unknown to me.\nAllow renaming of referenced actions This is a minor one, but still bugging me a bit. Once triggers or actions have dependencies, like other actions that use the output of the trigger or action, you\u0026rsquo;re unable to rename it any longer. Propertly naming triggers and actions make it easier for others to understand, so it would be nice if we could rename it after the fact. The only solution currently is to switch to code view and find-replace the name of the trigger or action.\nRemember collapse/expand state of actions When you open the logic app editor or you switch from code view to designer view, all actions will be collapsed, even though you were just working on an action. It would be nice if the designer would remember the collapse/expand state of the actions. This is especially useful if you quickly need to do something in code-view and than come back, not having to expand the actions again to get to the point where you were.\nRecently added actions list Most of the times I\u0026rsquo;m working with the same few actions when on a project. Currently when you add a new trigger or action there\u0026rsquo;s a list of most popular connectors and actions, but how great would it be if there was a list of recently used connectors and actions? At least it would save me some time.\nVote for this idea on user voice! https://feedback.azure.com/forums/287593-logic-apps/suggestions/32690095-in-the-portal-designer-provide-a-recently-added-a\nDon\u0026rsquo;t reload choose an action dialog A bit in line with the previous suggestion, but it would be nice if the \u0026lsquo;Choose an action\u0026rsquo; dialog wouldn\u0026rsquo;t reload every time. Initially it shows the dialog like I left it, most of the times displaying the connector I need. But then it suddenly refreshes to show the most popular connectors instead. This is slowing down my workflow, since I know I should wait a few seconds for the dialog to refresh and then search again for the connector.\nContinuous Integration/Deployment The next few improvement suggestions are focused around continous integration and deployment. Although this might be seen as a more advanced topic, these suggestions are at least as important as the previous ones as they allow for a more professional method of working with logic apps which is more in line with other development practices.\nAllow defining parameters in designer Logic apps support parameters, so we can parameterize pieces of the logic app that change between the different environments we deploy the apps in.\nI\u0026rsquo;ve you\u0026rsquo;re new to using parameters to prepare your logic apps for CI/CD, please take a look at this post, so you understand the difference between ARM and logic apps parameters.\nCurrently there\u0026rsquo;s no way to view or create logic apps parameters from the designer. The only supported way is by using code-view. This lets you define parameters, but in order to set the parameters from the underlying ARM template, you need to open the json file directly. It would make it a lot easier if we could view and create parameters directly from the designer. Even better would it be if we could set the parameter values to ARM parameters or variables.\nVote for this idea on user voice! https://feedback.azure.com/forums/287593-logic-apps/suggestions/31818607-allow-adding-parameters-with-a-default-value-on-th\nSome actions don\u0026rsquo;t support parameters Although parameters are supported, not all actions support parameters well. In runtime I\u0026rsquo;ve never seen any problems with parameters, but for some actions it breaks the designer functionality when parameters are used for some input fields. An example is the \u0026lsquo;Update a record\u0026rsquo; action of the Dynamics 365 connector. It is common practice to use separate organizations for each of the staging environments and obviously I\u0026rsquo;d like to parameterize it. However, when doing this, the designer can\u0026rsquo;t evaluate the \u0026lsquo;dataset\u0026rsquo; parameter. It still works in runtime though, but you lose all designer functionality since the designer can\u0026rsquo;t infer the schema for the record.\nConnections and parameters messed up when opening designer When I first started out parameterizing my logic apps, I though that the default parameter names were not really descriptful or follow our naming conventions. I started out changing the connections, parameter names and removing unneccessary parameters, only to discover that once I changed something in the logic app, Visual Studio would recreate all connections and parameters. I\u0026rsquo;ve got to the point that I accept the situation and that makes my life a bit easier. But it would be nice if the connections and parameters wouldn\u0026rsquo;t get recreated each time we change something in the logic app.\nVote for this idea on user voice! https://feedback.azure.com/forums/287593-logic-apps/suggestions/31427497-logic-app-designer-and-code-view-update-the-param\n","date":"February 6, 2018","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2018/02/logic-apps-improvement-suggestions/","summary":"I must say that Logic Apps has come a long way in its brief lifetime. It\u0026rsquo;s surprisingly easy to get up and go with Logic Apps and the number of available connectors is crazy. However there are still a couple of things that could be improved to make it friendlier for the more serious applications. Here\u0026rsquo;s my list.\nThe last few weeks I had the chance to spend a lot of time with Azure Logic Apps.","tags":["serverless","logic apps","visual studio","Azure","improvements","connectors"],"title":"Logic Apps improvement suggestions"},{"categories":["Azure","iaas","vhd","virtual machine"],"contents":"During my day job I regularly had to use virtual machines to do my work on. It just simply isn\u0026rsquo;t convenient to run BizTalk Server or SharePoint on you laptop. I\u0026rsquo;ve used many types and brands of virtualisation software like Virtual PC, Virtual Server and VMWare. More recently I started using Hyper-V, which, because baked into Windows 8, sounds like a very natural thing to do.\nUnfortunately, whatever software I used, the performance I get just doesn\u0026rsquo;t provide a good user experience. Secondly, I\u0026rsquo;m always juggling with these, sometime huges, VMs, transferring them to external hard drives, copying them etc. Lastly there\u0026rsquo;s also the tradeof between portability and performance of the laptop/tablet I\u0026rsquo;d like to use for my work and in order to run these VMs it requires quite a beefy machine.\nAll of these things made me dream of having the option to run my VMs in Azure, so I could access them from any device from anywhere. With the arrival of Azure\u0026rsquo;s Infrastructure-as-a-service offering, this became a viable reality. With the recent announcement that Azure billing will be per minute and you won\u0026rsquo;t be billed for stopped VMs, I think the platform is ready and I decided to take the plunge.\nCondiderations There are a few ways to have your development VM run in Azure:\n Create and configure the VM in Azure Create a custom template and upload it to Azure Copy an existing VHD to Azure  Because I currently have VHDs on my machine that I just like to run as-in in Azure, I explored the latter option. I will describe in this post how you can do the same.\nImportant: The newer VHDX format is not supported in Windows Azure. You need to convert the disk to VHD using Hyper-V Manager or the convert-cmdlet. My disk was already a VHD, so I don\u0026rsquo;t have experience with this process.\nSupported OS The list supported operating systems are either Windows Server 2008 R2 with SP1 (x64) or Windows Server 2012 (x64). Although I didn\u0026rsquo;t find any writing of this I assume this is for creating the templates. I tried copying an existing Windows 7 VHDto Azure and it works just fine. I didn\u0026rsquo;t try with any other operating systems yet, but I\u0026rsquo;ll try Windows Server 2008 next.\n4 Simple Steps Copying an existing VHD to Azure proved to be easier than I thought, with the exception of uploading the VHD (more on that in a bit). Follow these steps for copying your VHD to Azure.\nThese steps assume you already have a working Hyper-V VHD available.\nStep 1 – Create a storage account The VHDs are stored on Azure in a storage account. To create a new storage account, login to the Azure Portal and click the big plus sign on the bottom and choose Data \u0026gt; Storage \u0026gt; Quick Create. Enter a valid name for the URL and choose a location that is most close to you.\n\nOnce the storage account is created, locate it in the Azure Portal and click the Manage Access Keys button at the bottom. Take note of the primary access key, because we need it for the next step where we upload the VHD to this storage account.\n\nNext, go to the containers section of the storage account and create a new container. You can name it whatever you want.\nStep 2 – Upload the VHD The next step is to upload the VHD to the storage account for it to be used in Azure. Note that uploading the VHD can take quite some time depending on the size of the VHD and your upload speed.\nUploading the VHD to Azure proved to be a bit of a challenge. First of all you need to make sure you upload the VHD as a page blob. It took me 12 hours of uploading to find that out. Then there are a lot of different third party storage explorers available to manage your storage account, some of which don\u0026rsquo;t support page blobs or only reading page blobs, not uploading them. I tried many of them and personally like CloudXplorer the best. There\u0026rsquo;s an evaluation version available that you can use.\nAfter you installed CloudXplorer and start it for the first time, it\u0026rsquo;ll ask you to add a new account. For the account details, use the name and primary key of your storage account, created in the previous step.\nI found the upload to be more reliable when using more threads. You can increase the number of threads CloudXplorer uses for uploading by going to File \u0026gt; Preferences. I\u0026rsquo;ve configured mine with 4 threads, but you should play with it yourself. Increasing the number of threads can also increase your upload speed, if you have the bandwidth.\n\nTo upload the VHD open the storage account node on the left and right-click the storage container. Choose \u0026lsquo;Upload page blob\u0026rsquo;, pick the VHD from your disk and get back to doing other stuff as this might take a while.\n\nUnfortunately I had occasions where the connection was dropped and I had to start the upload all over again. It should be possible to resume uploading, but for me that feature wasn\u0026rsquo;t working.\nStep 3 – Create the disk in Azure OK, let\u0026rsquo;s assume your upload finally finished, we can now create the disk in Azure to be used as a virtual machine. If you by accident didn\u0026rsquo;t upload the VHD as a page blog, this is the step in the process where you get an error.\nIn order to create the disk, in the Azure Portal, navigate to Virtual Machines and go to the Disks tab. Click the create button at the bottom to create the disk. Give it a name and pick the VHD URL from the storage account where you uploaded the VHD to. Tell Azure that the VHD contains an operating system from the Windows operating system family.\n\nStep 4 – Creat the virtual machine The only thing left to do is to create a virtual machine that uses the disk we just created. To create a new virtual machine, click the plus sign on the bottom and choose Compute \u0026gt; Virtual Machine \u0026gt; From Gallery.\n\nIn the dialog that pops up, select My Disks and pick the disk we just created. Continue with the rest of the wizard and choose an appropriate virtual machine size and availability set (optional). Once you complete the virtual machine wizard, it will take a few minutes for Azure to create the virtual machine and start it. It can take a bit of time once the virtual machine is started before Remote Desktop Services are running and you\u0026rsquo;ll be able to connect to it.\nFinal words Now that you have your virtual machine running in Azure, don\u0026rsquo;t forget to turn it off if you don\u0026rsquo;t use it to prevent you from getting charged. This way you can have a fairly large VM with excellent performance, but still limit your costs.\n","date":"June 21, 2013","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2013/06/move-your-development-vm-to-azure/","summary":"During my day job I regularly had to use virtual machines to do my work on. It just simply isn\u0026rsquo;t convenient to run BizTalk Server or SharePoint on you laptop. I\u0026rsquo;ve used many types and brands of virtualisation software like Virtual PC, Virtual Server and VMWare. More recently I started using Hyper-V, which, because baked into Windows 8, sounds like a very natural thing to do.\nUnfortunately, whatever software I used, the performance I get just doesn\u0026rsquo;t provide a good user experience.","tags":["Azure","iaas","vhd","virtual machine"],"title":"Move your development VM to Azure"},{"categories":null,"contents":"A few weeks agoI posted learning material for preparing for exam 70-484. In the meanwhile I also took the 70-485: Advanced Metro style App Development using C# exam and used the information below for my preparation. As the exam was still in beta I don’t know yet whether I passed the exam, but I doubt it. You really need to make sure you’ve got hands-on experience with each of the topics.\nDevelop Metro style Apps by Using WinRT (17%)  Create background tasks. http://www.microsoft.com/en-us/download/details.aspx?id=27411 Consume background tasks. See ‘Create background tasks’ Create and consume WinMD components. http://channel9.msdn.com/Events/TechDays/TechDays-2012-Belgium/282  Discover and Interacting with Devices (16%)  Capture media with the camera and microphone. http://msdn.microsoft.com/library/windows/apps/Hh465152 http://msdn.microsoft.com/en-US/library/windows/apps/hh452791 Get data from sensors. http://msdn.microsoft.com/en-us/library/windows/apps/hh465278.aspx http://msdn.microsoft.com/en-us/library/windows/apps/hh465274.aspx http://msdn.microsoft.com/en-us/library/windows/apps/hh465139.aspx Enumerate and discover device capabilities. http://msdn.microsoft.com/en-us/library/windows/apps/hh464977.aspx  Program User Interaction (17%)  Implement printing by using contracts and charms. http://msdn.microsoft.com/en-us/library/windows/apps/hh465225.aspx Implement Play To by using contracts and charms. http://msdn.microsoft.com/en-us/library/windows/apps/hh465176.aspx Notify users by using Windows Push Notification Service (WNS). http://msdn.microsoft.com/en-us/library/windows/apps/hh465460.aspx  Enhance the User Interface (16%)  Design for and implement UI responsiveness. http://blogs.msdn.com/b/windowsappdev/archive/2012/03/20/keeping-apps-fast-and-fluid-with-asynchrony-in-the-windows-runtime.aspx Create animations and transitions. http://msdn.microsoft.com/en-us/library/windows/apps/hh465165.aspx Create custom controls. http://blogs.u2u.be/diederik/post/2012/01/21/Building-C-custom-controls-in-WinRT-Metro.aspx Design Metro style apps for globalization and localization. http://msdn.microsoft.com/en-us/library/windows/apps/hh465006.aspx  Manage Data and Security (17%)  Design and implement data caching. http://msdn.microsoft.com/en-us/library/windows/apps/hh465109.aspx Save and retrieve files from the file system. http://msdn.microsoft.com/en-us/library/windows/apps/hh464959.aspx Secure app data. http://msdn.microsoft.com/en-us/library/windows/apps/hh465012.aspx  Prepare for a Solution Deployment (17%)  Design and implement trial functionality in an app. http://msdn.microsoft.com/en-us/library/windows/apps/windows.applicationmodel.store.licenseinformation.aspx Design for error handling. Design and implement a test strategy. Design a diagnostics and monitoring strategy. http://msdn.microsoft.com/en-us/library/hh974575.aspx  ","date":"September 26, 2012","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2012/09/preparing-for-70-485-advanced-metro-style-app-development-using-c/","summary":"A few weeks agoI posted learning material for preparing for exam 70-484. In the meanwhile I also took the 70-485: Advanced Metro style App Development using C# exam and used the information below for my preparation. As the exam was still in beta I don’t know yet whether I passed the exam, but I doubt it. You really need to make sure you’ve got hands-on experience with each of the topics.","tags":null,"title":"Preparing for 70-485: Advanced Metro style App Development using C#"},{"categories":null,"contents":"Last week I took the 70-484: Essentials of Developing Windows Metro style Apps using C# exam. In preparation for the exam I used the resources below. Hopefully they can help you too preparing for the exam.\nDesign Metro style Apps (19%)  Design the UI layout and structure. http://msdn.microsoft.com/en-us/library/ms750613.aspx http://msdn.microsoft.com/en-us/library/system.windows.style.aspx Design for separation of concerns (SOC). http://channel9.msdn.com/Events/TechDays/TechDays-2012-Belgium/282 Apply the MVVM pattern to your app design. http://dotnetspeak.com/index.php/2012/07/working-with-gridview-control-in-winrt-app/ http://msdn.microsoft.com/library/windows/apps/BR209833 Design and implement Process Lifetime Management (PLM). http://www.srtsolutions.com/winrt-app-activation-resume-and-suspend Plan for an app deployment.  Develop Metro style Apps by Using WinRT (19%)  Access and display contacts. http://msdn.microsoft.com/en-us/library/windows/apps/br225002.aspx Design for charms and contracts. Implement search. http://www.sormh.com/how-to-implement-search-in-windows-8-metro-style-app Implement Share in an app. http://www.jonathanantoine.com/2011/09/18/windows-8-the-sharing-contract/ Manage app settings and preferences. http://blogs.msdn.com/b/going_metro/archive/2012/04/22/integrating-with-windows-8-settings-charm.aspx  Create the User Interface (21%)  Create layout aware apps to handle view states. http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.viewmanagement.applicationviewstate.aspx Implement layout controls. http://www.srtsolutions.com/winrt-sample-a-quick-look-at-semantic-zoon Design and implement the app bar. http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.appbar.aspx Design and implement data presentation. http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.flipview.aspx http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.gridview.aspx http://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.listview.aspx Create and manage XAML styles and templates.  Program the User Interaction (21%)  Create and manage tiles. http://mobile.dzone.com/articles/winrt-example-using-periodic Notify users by using toast. http://visualstudiomagazine.com/articles/2012/03/25/using-push-notifications-in-windows-8.aspx Manage input devices. http://blogs.msdn.com/b/windowsappdev/archive/2012/07/02/modernizing-input-in-windows-8.aspx Design and implement navigation in an app. http://mikaelkoskinen.net/post/winrt-metro-navigate-between-pages-passing-parameters.aspx  Manage Security and Data (20%)  Choose an appropriate data access strategy. Retrieve data remotely. http://msdn.microsoft.com/en-us/library/windows/apps/xaml/jj152726.aspx http://channel9.msdn.com/events/BUILD/BUILD2011/PLAT-580T Implement data binding. http://msdn.microsoft.com/en-us/library/windows/apps/hh758311.aspx Manage Windows Authentication. http://msdn.microsoft.com/en-us/library/windows/apps/windows.security.credentials.passwordvault.aspx http://msdn.microsoft.com/en-us/library/windows/apps/windows.security.credentials.ui.credentialpicker.aspx Manage Web Authentication. http://msdn.microsoft.com/en-us/library/windows/apps/windows.security.authentication.web.webauthenticationbroker.aspx http://msdn.microsoft.com/en-US/library/windows/apps/xaml/hh465275  ","date":"September 6, 2012","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2012/09/preparing-for-70-484-essentials-of-developing-windows-metro-style-apps-using-c/","summary":"Last week I took the 70-484: Essentials of Developing Windows Metro style Apps using C# exam. In preparation for the exam I used the resources below. Hopefully they can help you too preparing for the exam.\nDesign Metro style Apps (19%)  Design the UI layout and structure. http://msdn.microsoft.com/en-us/library/ms750613.aspx http://msdn.microsoft.com/en-us/library/system.windows.style.aspx Design for separation of concerns (SOC). http://channel9.msdn.com/Events/TechDays/TechDays-2012-Belgium/282 Apply the MVVM pattern to your app design. http://dotnetspeak.com/index.php/2012/07/working-with-gridview-control-in-winrt-app/ http://msdn.microsoft.com/library/windows/apps/BR209833 Design and implement Process Lifetime Management (PLM).","tags":null,"title":"Preparing for 70-484: Essentials of Developing Windows Metro style Apps using C#"},{"categories":["dotnetmag","lightswitch","Silverlight","visual studio"],"contents":"Two weeks ago, on July 26th, Visual Studio Lightswitch 2011 was released. I ‘d seen a couple of videos what you can do with Lightswitch so I though I’d put it to the test by developing a replacement for a tool I use at one of my clients. Lightswitch is really easy to use and I believe I can actually teach my wife to create data-centric application using it. Until you reach the limits though, because than it becomes more difficult really fast. The main reason for this is that there’s not much documentation available on the inner workings of Lightswitch and how to hook into some of it. One of the things I ran into was how to add my own button to the ribbon that is available on every screen, like the default Save and Refresh buttons are (unless you explicitly set them not to be visible on a screen).\nExtending Lightswitch applications Like with many things, if you know how to do it, it’s not that hard. Lightswitch makes heavy use of the Managed Extensibility Framework, MEF. To extend the default behavior of Lightswitch you need to implement certain interfaces and export your implementation using the MEF Export attribute. There are multiple places your extension could live:\n A Lightswitch Extensibility solution A Silverlight class library In the Lightswitch application itself  The Microsoft preferred place if the Lightswitch Extensibility solution, but I believe that’s overkill if you just want a button specific to the application you’re building. The Lightswitch Extensibility solution is a perfect way to build extensions for Lightswitch that you want to reuse for multiple applications, e.g. a certain shell style of theme for the company you work for. To create a Lightswitch Extensibility solution, you need to have the Lightswitch Extensibility Toolkit, available here. Note that you also need Visual Studio 2010 Pro and the Visual Studio 2010 SP1 SDK in order to use the toolkit.\nThe Silverlight class library is a good option if you have extensions specific to your application. It works the same way as extensions in the Lightswitch application itself, but makes for a better separation of generated and custom code.\nThe last option is good if you want a quick extension to your application. In this example I use this method because it’s the easiest to demonstrate how it works and allows to focus on the task at hand: adding a button to the ribbon that is available on all screens.\n Adding a class file to the Lighswitch application It may sound easy to add a class file to the Lightswitch application, but if you don’t know how to do it, it can be quite a challenge. The thing is that a Lightswitch application behaves differently in Visual Studio. It isn’t a normal project with class files, folders and custom controls. It’s a logical view of your application that hides all the generated code from you. But there’s a way to switch to the view which does show the various projects and files that make up your application. In the button strip on the top of your solution explorer, there’s a button on the far right that allows you to toggle between the logical and the file views.\n\nOnce you switched to the file view, you see your application is made up by a Client, Common and Server project, where the Client project contains your Silverlight app, the Server project contains all server related stuff like data access and the Common project contains the things shared between the Client and Server project. You can go one step further by choosing to show all files. This is also a button on the button strip on top of your solution explorer. If you toggle to show all files, you also get to see the ClientGenerated and ServerGenerated projects. This is used for example if you need to change a connection string in the web.config, which is located in the ServerGenerated project.\n\nSince the button needs to be added to the Silverlight client, this is where we add the class file. Right click the Client project and choose to add a class. Name it MyGroupProvider.cs. I’ll explain later why we call it a provider.\nSteps to add a custom button Adding a custom button to the ribbon that is available on all screens involves the following steps:\n Create a class that implements IExecutable for executing code when the button is clicked Create a class that implements IShellCommand which is our button Create a class that implements IShellCommandGroup which is the group for the button Create a class that implements IShellCommandGroupProvider that acts as the provider for MEF so Lightswitch can find our button.  Implement IExecutable The class that implements IExecutable is responsible for executing code when the button is clicked. This interface could be compare to the Silverlight ICommand interface but with some editions. The interface provides properties through which Lightswitch determines if the executable can be executed and methods for executing the code. In addition to the ICommand interface, the IExecutable interface allows for synchronous and asynchronous execution, allows cancellation of an asynchronous execution and provides a way to handle errors with the execution.\nCreate a class named MyExecutableObject and implement IExecutable. For the executable to work in the ribbon, you need to change the CanExecuteAsync to return true and implement ExecuteAsync to execute the code you want, e.g. showing a screen. The synchronous CanExecute property and Execute method are not used in this case, although I don’t know where they would be used. Make sure to return null in the ExecutionError property and return Microsoft.LightSwitch.ExecutionState.NotExecuted for the ExecutionState. Of course you can add your own logic to determine whether the executable can be executed or handle the errors the way you like.\n Implement IShellCommand Now we have a class that implements IExecutable, we need to create a button through which the user can execute it. A button is a class that implements the IShellCommand interface. It allows you to specify a description for the button as well as a name. The ExecutableObject needs to return a new instance of the MyExecutableObject we just created. Furthermore, to be able to use the button, we need to make sure it’s enabled and visible. To create the button, create a new class named ‘MyCommand’ and implement the IShellCommand interface. Make sure to change all property and method bodies to do something and not throw an NotImplementedException.\n You can specify an image for the button by returning a BitmapImage using an image resource. For this you add an image to the Resources folder of the Client project. Then you use the following piece of code to return the image.\n Implement IShellCommandGroup As of the time of writing I don’t know how to add a custom button to the built-in Data button group, so we’ll create our own group to host our button. We create a new button group by creating a new class that implements the IShellCommandGroup interface. This interface lives in the Microsoft.LightSwitch.Runtime.Shell.ViewModels.Commands namespace, so make sure to add a using for it.\nImplement the interface by right clicking the interface and choosing ‘Implement Interface’. It will generate three properties for you: Commands, DisplayName and Name. Replace the getters of the DisplayName and Name to return the names you’d like to use for your command. The commands property returns a collection of the commands available in the group. In this case we only return our MyCommand. You can construct a collection or use the ‘yield’ keyword as in the example below.\n Implement IShellCommandGroupProvider You now created you executable, the button and the group. The last thing to do is make sure Lightswitch know about it, so it can add it to the ribbon. To do this, we use a class that implements the IShellCommandGroupProvider class. Create a new class named MyGroupProvider and imlement the IShellCommandGroupProvider interface. Make sure the GetShellCommandGroups method returns the MyGroup class, since that is the group we want to make available to the Lightswitch application.\nTo allow the Lightswitch application to discover the group provider, add an Export attribute to MyGroupProvider class with parameter typeof(IShellCommandGroupProvider). The Export attribute is a way for MEF to export definitions in your class library or application, which can be imported elsewhere using an Import attribute. MEF scans the application for all Export attributes and makes them available. The parameter for the Export attribute allows MEF to create filters on the import, so that only particular types are imported. The Lightswitch application imports types that implement the IShellCommandGroupProvider and knows what to do with it. This way Lightswitch can discover our command groups and add them to the ribbon.\n Now if you run your application you’ll see your button added to the ribbon. Once this is working, you can continue to modify the properties of your button, group and executable to do what you want.\n\n","date":"August 10, 2011","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2011/08/lightswitch-custom-ribbon-button/","summary":"Two weeks ago, on July 26th, Visual Studio Lightswitch 2011 was released. I ‘d seen a couple of videos what you can do with Lightswitch so I though I’d put it to the test by developing a replacement for a tool I use at one of my clients. Lightswitch is really easy to use and I believe I can actually teach my wife to create data-centric application using it. Until you reach the limits though, because than it becomes more difficult really fast.","tags":["dotnetmag","lightswitch","Silverlight","visual studio"],"title":"Lightswitch: custom ribbon button"},{"categories":["dotnetmag","Features","Mango","Windows Phone 7"],"contents":"A lot has been said and written about Windows Phone 7 Mango. The eagerly awaited update to Microsoft’s new Windows Phone platform is said to sport 500 new features, bringing it up to par with its competition. While 500 features sound a lot, it may well be achieved if you count every little detail. Many of the bigger features can be found all over the web, especially in the much detailed Engadget in-depth preview. However, a comprehensive list showing all new features hasn’t been published yet. The table below is my attempt to sum up all the features I have found using my own phone with the Windows Phone 7 Mango beta for developers and browsing the Internet. I focused on the consumer features and left out the features available to developers, like e.g. raw camera access or the calendar API. If you think I missed some, please let me know and I’ll add them. Click on the image for a larger view.\n\n","date":"July 5, 2011","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2011/07/windows-phone-7-mango-features/","summary":"A lot has been said and written about Windows Phone 7 Mango. The eagerly awaited update to Microsoft’s new Windows Phone platform is said to sport 500 new features, bringing it up to par with its competition. While 500 features sound a lot, it may well be achieved if you count every little detail. Many of the bigger features can be found all over the web, especially in the much detailed Engadget in-depth preview.","tags":["dotnetmag","Features","Mango","Windows Phone 7"],"title":"Windows Phone 7 Mango features"},{"categories":null,"contents":" It’s a wrap, MIX11 is over. Yesterday was the last day of MIX and many people have already returned to their homes. There was not much news to be shared, but here are my findings anyway.\nDesigner and Developer: A Case for the Hybrid (Jeff Croft) In this talk Jeff Croft talks about what makes good designers and developers. His statement is that designers should know how to program and developers should know how to design. He doesn’t mean a designer actually needs to know how to program, but the way of thinking as a programmer is what’s important. I think he has an interesting view here and I do actually agree.\nNuGet in Depth: Empowering Open Source on the .NET Platform (Scott Hanselman, Phil Haack) This was by far the most entertaining session all week. And what else do you expect of the HaaHa show? Except of all the fun stuff going on, NuGet also seems like a really great addition to Visual Studio, even for enterprises. NuGet is a package manager that integrates with Visual Studio (but also works outside of it from command line) that enables you to find and include open source project very easily. Without NuGet you would Google the open source project with Bing, go to the website, look for the download, pick the right version, download it and finally install it. With NuGet you search for the package from within Visual Studio by typing a few keywords and then just click install. The package manager automatically adds references to the DLLs, imports dependencies if necessary and can do al kinds of additional stuff, like modifying the web.config. For enterprises this could be interesting too, where if you needs to reference assemblies of other teams within the organization, it makes it easier to discover them and keep them up to date.\nSome fun stuff from the session, that Scott showed right before the start:\n Sometimes Red, Sometimes Blue Let me Google that with Bing for you Microsoft Surface Parody YT-Cracker – View Source Macbook Wheel  Enhanced Push Notifications and Tiles for Windows Phone (Thomas Fennel) Thomas talked about the enhancements Microsoft did to the push notifications and tiles for Windows Phone. The push notification have been enhanced regarding reliability and performance, so that updates can come quicker on non-persistent friendly networks. About 15 minutes it would take at max. For persistent friendly networks the push notifications are instant.\nThe tiles are enhanced so they now also support background info. If you provide this background info, the tile will animate a flip on the home screen. The flip is asynchronous with other tiles, so it creates a dynamic feel. It’s now also possible to update the tiles directly from the application or using a background agent, making it easier to have dynamic tiles. Last thing is that you can create multiple tiles per application, so you can pin information from your app and allow deep linking into your app.\nAdvanced Features in Silverlight 5 (Nick Kramer) Many of the features from this talk we already seen really quick in the keynote, but I want to highlight a few that were not so clear.\n Silverlight 5 supports trusted applications in the browser. To use this feature you still need to enabled trusted app in the out-of-browser settings (awkward, as Nick mentioned himself), sign the XAP with a certificate and have the certificate installed on the client machine. When you do testing on localhost, it’s not required to sign the XAP. Silverlight 5 comes with P/Invoke, allowing you to call directly into Win32 APIs. The advantage of P/Invoke over COM+ for Win32 APIs is that it’s strongly types and doesn’t required COM registration. This feature is not available in the beta and obviously not available on Mac either. Silverlight 5 supports the WebBrowser control now also in the browser Silverlight 5 can run in a 64 bit process. This is important because you have no control over the browser a user uses or if you need a lot of address space. The PivotViewer control ship as part of the Silverlight 5 SDK, but is not available in the beta. They made it easier to use your data with the PivotViewer since you don’t need to create specific cxml files anymore. The visuals are also XAML-based now, where they were bitmaps before.  Last announcement is that Silverlight 5 ships second half of 2011.\nJust one day left in Las Vegas to enjoy myself. Maybe we go down town or hang out in the shark reef pool, we don’t know yet.\n","date":"April 15, 2011","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2011/04/mix11-day-3/","summary":"It’s a wrap, MIX11 is over. Yesterday was the last day of MIX and many people have already returned to their homes. There was not much news to be shared, but here are my findings anyway.\nDesigner and Developer: A Case for the Hybrid (Jeff Croft) In this talk Jeff Croft talks about what makes good designers and developers. His statement is that designers should know how to program and developers should know how to design.","tags":null,"title":"MIX11: Day 3"},{"categories":null,"contents":" Today was a really interesting day, with lots of new stuff being announced and sessions packed with interesting information. These are my findings of this day.\nKeynote (Joe Belfiore, Scott Guthrie) The keynote started off with an inspiring viral video. It appears a fan of Windows Phone created it by request of Microsoft after he created his own viral out of love of the phone. If the viral gets over 200k of views on YouTube, it is turned into a real commercial. Support this by watching the video here.\nJoe went on talking about the next version of Windows Phone, codenamed Mango. It will be on new phones fall this year and includes 16 more languages, more countries for app creation (38 instead of 30) and more countries for app commerce (30 instead of 16). This includes the Netherlands.\nMango has a lot of new features and Joe showed a lot of them. The new features include:\n App jump list, just as you’re used to with contacts, to quickly find the installed app you’re looking for App list search to find an installed app, which can also directly search the marketplace The marketplace was redesigned to have separate pivots for reviews and related apps, making it easier to navigate Once you install an app from the marketplace, you’re taken to the app list directly and there you can see the app being installed Added extras pivot on music and video hub showing apps that integrate with the hub Full IE9 engine built-in to the OS The address bar of the browser is moved to the bottom to free up more screen real estate. It is also available it landscape mode now. Because it uses IE9, it supports HTML5 The HTML5 audio tag allows playing audio in the background, even if you leave the browser Live tiles now allow animation, multiple live tiles per app and can be updated without the push notification service Live tiles support deep linking into an app, allowing you to directly jump to a specific part of the app Sockets are now available allowing apps to be built like the demoed mIRC app There’s a built-in SQL CE database available to your apps, making it easy to store data locally, e.g. for caching There are more launchers and choosers available for choosing things like contacts, images. You can also now jump directly into locations (Bing maps) Additional sesnor access available, like raw camera, compass and gyro access Custom ringtones can be created by applications A motion sensor API, making it easy for developers to leverage the compass and gyroscope to write motion oriented apps without caring too much about the tedious math involved Multi-tasking for audio, downloads, alarms and custom tasks Fast app switching, which makes returning to apps lightning fast and allows you to see what apps are kept in the background in a dormant state (this could be compared to ALT+TAB on Windows)  A couple of announcements were made while demonstrating the new features, like:\n Skype to come to WP7 this fall, when Mango is released Spotify to come to WP7 in the near future Angry Birds coming to WP7 on May 25th Kik messenger available the coming weeks, finally providing a good cross platform messenger The updated developer tools for Mango are available next month  Joe hands over to Scott Guthrie, who talked about developer enhancements for Windows Phone 7.\nScott kicks off with showing enhancements to the emulator that enable you to emulate the accelerometer and locations. The accelerometer emulation works by showing a 3d model of the phone and a pivot point you can grab with your mouse that allows you to mouse the model of the phone. The locations allows you to place points on a map that are directly forwarded to the phone as geo locations. Both emulations also allow recorded actions to be repeated, like shaking the device of moving along a certain path.\nNext up Scott demoed the out-of-the-box performance analysis tools, that allow you to get very detailed information on the performance of you app over time. Once the new SDK comes out it should even work on current WP7 apps.\nThe team also made additional performance optimizations to the platform that don’t require you to write any additional code. As I understood it, the only thing you need to do is recompile the app. The performance optimizations include:\n Scrolling and input is much smoother and doesn’t block the UI Image decoding is done off the UI thread, which makes sure the UI isn’t blocked when you need to load a list of images Garbace collection is improved so that it occurs more times, so that it does need to do less work and is scheduled to occur when your app is idle Memory usage is improved so your app consumes about 30% less memory, again without writing a single line of code  Mango includes 1500+ new APIs. It uses the full Silverlight 4 feature set, so it leverages those features too, like sockets. It now also allows you to combine Silverlight with XNA, so you can use all the 3D glory in your Silverlight app.\nUp next: Silverlight 5. Also on the field of Silverlight 5 news is available. To start of with, Silverlight 5 gets hardware based video decoding, bringing 1080p video to netbooks. They also added something they call ‘Trickplay’ that allows you to speed up or slow down a video, but with pitch correction, so voices don’t sound like Alvin \u0026amp; the Chipmunks. Lastly, on the media part, they also added remote control support. All these additions make Silverlight the premier platform for streaming media.\nJohn Papa continued to show off some new 3D features of Silverlight 5. Het showed a Silverlight application that uses the XNA APIs to show a 3D model of a house. He demoed 2D to 3D projection, which allows you to take 2D Silverlight controls and project them against a 3D model, so that the 2D control aligns with the model. The source code of all this is available next month.\nSome additional new features include:\n Binding in Style setters, so that you can alter styles at runtime Implicit data templates, allowing you to specify a data template for e.g. a list box based on the type of the bound object. When you do this, the template is applied everywhere in your app where that type of object is bound Data binding debugging, allowing you to set a breakpoint in XAML and see detailed information about the binding  The Silverlight 5 beta is now available here.\nFinally Jeff Sandquist came on stage talking about Kinect and how many they sold (over 10 million). His announcement was something I was looking forward too since yesterday when I noticed a lot of Kinects on stage: the Kinect SDK will be released later this spring.\nHis talk continued to show all the cool things you can do with Kinect and the SDK, like a sofa on wheels! Check them here.\nBuilding In Browser Experiences With Silverlight 5 (Steve Lasker) In this session, Steve dove a little deeper into many of the new Silverlight 5 features. Not all features are available in the Silverlight 5 beta yet. One of them is vector based printing, something that wasn’t announced at the keynote yet. In Silverlight 4, printing is done by converting the control to be printed to a bitmap which is then sent to the printer. This is not so efficient since these bitmaps can become very large and printing becomes really slow. It also defeats the possibility to print to PDF since all you get is a bitmap inside a PDF. With vector based printing the vectors are sent to the printer, so no more bitmaps when not necessary.\nGet Ready For Fast App Switching In Windows Phone (Adina Trufinescu) In this session Adina talked about how fast application switching works and what you need to do to leverage it. In the current version of WP7, when the user presses the back or Windows button when in your app, the app is deactivated and then tombstoned. The the deactivated phase you can store the state of the application before it gets killed. When the user returns to your app, it is activated and then running. In the activated phase, you can restore the state you saved earlier during the deactived phase.\nIn Mango, the app doesn’t get tombstoned directly after the deactivated phase. Instead it enters a new state called ‘Dormant’. In this state, the app is kept in memory as is. As long as there’s memory available it stays there, but as soon as the OS needs more memory, e.g. another app is started, the app can be tombstoned anyway. The difference with the previous method is actually in the activated phase. In this phase you now need to check whether the app was dormant or tombstoned. Only in the latest case you need to reload the state. You can see if the app was dormant if the new property IsAppInstancePreserved equals true.\nIt might be you need to do additional work in the activated phase. Because of resource usage, the phone OS terminates things like timers, access to camera, audio etc when the app enters the deactivated phase. In most of the cases, the OS resumes these things, but not in all. For e.g. if you have a MediaElement on your page, you need to write some code to resume it, since the OS doesn’t do it for you.\nWhat’s New In The Windows Phone Developer Tools (Vibhor Agarwal) This session was a total let down, since it was exactly the same as what Scott Guthrie already talked about during the keynote.\nCrafty UX (Sara Summers, Nathan Moody, Robert Tuttle and Guido Rosso) This was again a UX Lightning series, where there were four speakers and each had exactly ten minutes to do their talk. Although not as inspiring as yesterdays UX Lightning series, it was still fun. One thing that I noticed was the difference in ideas of the speakers. Where one said you should stay away from the computer at all when you’re prototyping, another said you should create experiences that are really close to the final result by doing videos etc. One thing I got from this session was: It doesn’t matter how you prototype, but please, do something. Don’t start building right away.\nMultitasking In The Next Version Of Windows Phone, Part I (Darin Miller) Another really interesting session where Darin explained the multitasking model and the choices Microsoft made and why. Microsoft wants to support multitasking, but on the other hand be careful with the resources of the phone, like battery and network usage. It is always a balance between user experience and health.\nThere are a couple of system services for doing multitasking, or background work rather. These are:\n Alarm and Reminder, allowing you to pop up an alarm or reminder just like the rest of the phone does. They are persisted across reboots and can be turned off by the user. To add an alarm or reminder, you instantiate one in your app and call ScheduledActionService.Add() with the instance. Background transfer service, allowing you to download or upload data in the background. Even if you’re just doing downloading or uploading in the foreground, this API is really useful. It has a download maximum of 20MB over the cell network, but allows more when connected to Wifi. If no Wifi is available, the download is scheduled and will automatically begin once connected to Wifi. Uploads are limited to approx. 3MB, but this needs validation by Microsoft. To schedule a background transfer, you instantiate a BackgroundTransferRequest and call ScheduledActionService.Add() with the instance. Background audio, allowing you to play audio in the background just as Zune does. The simplest method is using the audio tag on a HTML5 webpage. The OnEnded trigger specified in the tag still fires, even if the browser is not open, allowing you to advance to the next track. The more advanced method is by using the BackgroundAudioPlayer class. This enables previous and next track functionality in the menu when you press the volume rocker on the phone. There are two methods: URL and Streaming where the latter allows you to decrypt / decompress the audio.  When you want to do more, you can write your own agent. An agent can do a lot of stuff, but not everything is allowed.\n Allowed: Tile updates, Toast notifications, Location access, Network access, Read/Write isolated storage, sockets and most framework APIs. Restricted: Displaying UI, access XNA libraries, access microphone, access camera, access sensors, play audio (except for background audio APIs)  There are two types of background agents: PeriodicTask and OnIdleTask. They are all persisted across reboots. There’s a limit of 18 agents in total, but this number might change as Microsoft is validating this number. An agent can be scheduled for 14 days. You could try to set it longer, but it will still run for just 14 days. After the 14 days the agent is stopped. Your app can renew this schedule. This method prevents agents to be running when the user is actually not interested in the app anymore. Again this is an example of caring about the resources of the phone.\nPeriodic agents are executed every 30 minutes and may take 15 seconds max to execute their work. Periodic agents are scheduled to run sequentially to reduce the total CPU load. They are also executed as close as possible next after each other to limit the network usage, since network connection needs to be made and released by the OS.\nOn idle agents are only executed on external power or with non-cell network. They are allowed to run for up to 10 minutes and can be user for heavier tasks, like initial data sync.\nToday is already the last day of MIX11. I don’t expect a lot of new stuff today, but love to hear more about yesterdays announcements.\n","date":"April 14, 2011","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2011/04/mix11-day-2/","summary":"Today was a really interesting day, with lots of new stuff being announced and sessions packed with interesting information. These are my findings of this day.\nKeynote (Joe Belfiore, Scott Guthrie) The keynote started off with an inspiring viral video. It appears a fan of Windows Phone created it by request of Microsoft after he created his own viral out of love of the phone. If the viral gets over 200k of views on YouTube, it is turned into a real commercial.","tags":null,"title":"MIX11: Day 2"},{"categories":null,"contents":"Today was the first conference day and my second day at MIX11. The day began with a keynote and after that a couple of sessions. These are my findings of today.\nKeynote (Dean Hachamovitch, Scott Guthrie) Dean started off with looking back at the development of IE9 and how successful is has been so far. Then he announced that they’re already three weeks into development of IE10, which didn’t come as a surprise looking at the shirt he was wearing with a bit TEN on it with the ‘E’ being the IE logo. The rest of his talk goes on showing the performance compared to ‘other’ browsers (it was Chrome) and how much the standards have conformed. I’m no big HTML fan and got the creeps when he showed al kinds of variations on riadial gradients for CSS3 (-ms-radial for IE, -moz-radial for Firefox, –o-radial for Opera, etc)\nA great part of the demo was that in the end it appeared that the IE10 demos were actually running on an ARM 1.0Ghz machine and the performance was great. Dean’s talk concluded with the announcement that the first preview of IE10 is available immediately on IETestDrive.com\nNext up was Scott Guthrie who talked about the web stack. As per today they release the ASP.NET MVC 3 Toolds Update which includes\n JQuery 1.5 + Modernizr (a tool that automatically provides downward support of HTML5 constructs for HTML4 browsers) HTML5 support Entity Framework 4.1 support Scaffolding  Also announced is that Entity Framework 4.1 (Magic Unicorn edition) is released final today.\nThe rest of Scott’s talk was about Orchard (yet another CMS), NUGet (a package manager for open source projects; this one is cool, but not completely new) and WebMatrix (kind of like Visual Studio for dummies).\nThe last bit of the keynote Scott talked about Windows Azure. There will be several new things coming soon, like a new access control service, a new caching service, added content delivery network support and traffic manager support. Umbraco (another CMS being around a little while) demoed an extension for Windows Azure that allows web admins to configure their site to automatically scale upon traffic during certain periods. This looks like a unique selling point for Umbraco and fairly easy to configure.\nHTML5 for Silverlight Developers (Giorgio Sardo) In this session I was expecting to get explained when to use what technology so a Silverlight developer like myself knows when HTML5 is a better option compared to Silverlight. Unfortunately, Giorgio pointed out all the similarities between HTML5 for most of the session. For example, he took a duck crafted in XAML with Expression Design and showed how ‘easy’ it was to convert that to AVG (the vector format for HTML5). These conversions involved a lot of copy paste and custom built tools which showed again that tool support for HTML5 is lacking and should be priority one if they want Silverlight developers to be interested.\nDeep Dive MVVM (Laurent Bugnion) I doubted a lot if I would go to this session since I didn’t know exactly what deeper one could go with MVVM. Much deeper as it turned out. Laurent’s session overall was too much code and jumping back and forth between screens, files and tools to be able to follow it well. He assumed a little too much that attendees used MVVM Light before and also are comfortable with terms like IoC (Inversion of Control). His basic message was one of interest though, which is if you want to improve MVVM in your application and want to get rid of some tight coupling like e.g. you have with dialogs, you should use dependency injection and/or behaviors. He showed how these technologies can help you removing any of the tight coupling and keep you ViewModels testable.\nInspiring UX (Thomas Lewis, August de los Reyes, Corey Schuman and Chris Bernard) This was by far the most inspiring session so far. The idea behind the session is that every speaker has just ten minutes for their talk and their slides are timed and transition automatically. It was a great joy to see how well all speakers were able to time their words just right, where August’s talk topped everything by keeping in sync with every word on his slides. Besides the format, the contents of the talks was also interesting. When we walked out of the room we were inspired to do more with UX and felt that event the most boring battleship grey forms we work with on a daily basis could be improved to make it a pleasant experience for the user.\nToday is day 2 of MIX11 and we expect some serious announcements regarding Kinect and Windows Phone 7. Why Kinect? Well, we noticed about six of them were lined op on stage yesterday during the keynote. Will the Kinect SDK be released today?\n","date":"April 13, 2011","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2011/04/mix11-day-1/","summary":"Today was the first conference day and my second day at MIX11. The day began with a keynote and after that a couple of sessions. These are my findings of today.\nKeynote (Dean Hachamovitch, Scott Guthrie) Dean started off with looking back at the development of IE9 and how successful is has been so far. Then he announced that they’re already three weeks into development of IE10, which didn’t come as a surprise looking at the shirt he was wearing with a bit TEN on it with the ‘E’ being the IE logo.","tags":null,"title":"MIX11: Day 1"},{"categories":null,"contents":" Today was the preconference day at MIX11, which means boot camps for everyone that applied for them. There were options for the morning and afternoon boot camps and I chose the Silverlight and SharePoint \u0026amp; Silverlight boot camps. This is a brief summary of what I think were things of interest.\nSilverlight boot camp I didn’t came to this boot camp to improve my knowledge on Silverlight, but more because of the speakers: John Papa and Mike Taulty. I think they might be considered heroes in the field of Silverlight. As expected, the boot camp was planned well and packed with the basics for building line of business apps with Silverlight. Even for an experienced Silverlight developer there were interesting things as well.\nSilverlight comes with two HTTP stacks: the browser HTTP stack and the client HTTP stack. The difference is that the browser HTTP stack is easier to use, but is limited in its functionality. E.g. the browser stack automatically marshals the callback to the UI thread so you don’t need to. The browser stack on the other hand only supports 200 and 400 status codes and all other codes are converted to any of these. The client HTTP stack supports the full HTTP protocol, but requires more complex code. Always go for the browser HTTP stack, unless you need specific features e.g. in the case of SOAP, WCF, put or delete operations etc. To choose for a specific HTTP stack you can either do it on a per call basis or use the WebClient.RegisterPrecix static method to define the HTTP stack to use for certain URLs.\nThis week SP2 of WCF RIA Services for Silverlight 5 will be released. New features in this release are:\n DateTimeOffset, which allows the developer to explicitly specify a date time offset to use instead of the default one (by popular demand) MVVM support, by generating client side classes that are more suitable for databinding than the current ones  In the near future we can expect Entity Framework Code First to be supported by WCF RIA Services, but it will be in the release after the SP2.\nAlongside all the demos and information a few new small added features of Silverlight 5 were disclosed today:\n DataContextChanged event is added, which allows you to respond to DataContext changes Ancestor binding, which is derived from WPF and allows you to move up the control hierarchy and break out of the context of the (inherited) DataContext  SharePoint \u0026amp; Silverlight boot camp This boot camp was particularly interesting because it explained what to keep in mind when combining SharePoint and Silverlight to achieve an improved user experience.\nThe announcement was made that the SharePoint and Silverlight training is available on MSDN here.\nThings to keep in mind when building Silverlight for SharePoint are:\n Use a consistent theme in both SharePoint and Silverlight so they both blend Expose a JavaScript API, so SharePoint developers can interact with the Silverlight control Provide down level support, so the site still works even if someone doesn’t have Silverlight installed Tightly integrate with SharePoint, e.g. use the ribbon in combination with the Silverlight webpart  There are four ways to add Silverlight to SharePoint:\n Upload a XAP file Use the built-in Silverlight webpart Use the Silverlight SharePoint webparts extension Do it all by hand  The Silverlight SharePoint webparts (found here) is a great extension to the SharePoint solution project for Visual Studio, allowing you to easily add an Silverlight webpart. The steps to do this are:\n Add a Silverlight application to the solution Add a SharePoint solution to the solution Add a Silverlight webpart project item to the SharePoint solution Modify the config of the webpart to point to the XAP file  The SharePoint and Silverlight training contains code for a custom Silverlight webpart. One of the main reasons for using this webpart is because the default webpart has a timeout limit of 5 seconds, which means the Silverlight app needs to be running within 5 seconds or SharePoint kills it.\nSharePoint 2010 exposes an OData service when using WCF Data Services. This allows for full CRUD operations from within Silverlight. The pros for this method are: the code is type-safe and intellisense is provides.\nAn other option to get to the SharePoint data is to use the SharePoint client object model. This client object model provides access to a subset of types and members contained in the Microsoft.SharePoint namespace from .NET, JavaScript and Silverlight. This means you can access lists and pages from within Silverlight just as you would when using the server object model. Pros for this method: flexible, code re-use.\nThat’s it for now, more tomorrow on the first conference day at MIX11. I think we can expect a few announcements / releases during the keynote. My thoughts are: Silverlight 5 beta and new Windows Phone 7 SDK with new APIs.\n","date":"April 12, 2011","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2011/04/mix11-boot-camps/","summary":"Today was the preconference day at MIX11, which means boot camps for everyone that applied for them. There were options for the morning and afternoon boot camps and I chose the Silverlight and SharePoint \u0026amp; Silverlight boot camps. This is a brief summary of what I think were things of interest.\nSilverlight boot camp I didn’t came to this boot camp to improve my knowledge on Silverlight, but more because of the speakers: John Papa and Mike Taulty.","tags":null,"title":"MIX11: Boot Camps"},{"categories":null,"contents":"An important plus of rich internet applications is the potential user experience you can achieve by applying UX patterns. A part of this is the visual states and their transitions. A visual state determines what the user interface looks like at a certain point in time and the transitions describe how the application moves from one visual state to the other, many times using animations to enhance the experience.\n\nThe most obvious way when you’re unfamiliar with XAML is to change the visual state of an application by writing code to show or hide controls when events occur, like e.g. a button click. Besides that on many occasions it requires a considerable amount of code, it doesn’t fit properly with the Model-View-ViewModel pattern. Although the pattern doesn’t prevent you from writing code in the codebehind as long as it related to the View, the pattern encourages to do it as little as possible.\nThe next commonly seen approach from people that want to stick to the MVVM-believes is to show/hide controls by binding properties like Visibility and Opacity to the ViewModel. This works fine for simple visual states, but has a couple of downsides, such as hard to maintain when a lot of controls are part of the visual state change, no support for animations and lack of seperation between View and ViewModel.\nThe only real proper way of doing visual states with WPF or Silverlight (phone / desktop) is through the VisualState-property of controls and pages. Each visual state in the VisualStates-property has a set of deltas to the base visual state, like the change of opacity of a button to 100%. Each visual state can furthermore contain transitions to and from the state if required. You can write the XAML for the visual states and transitions by hand, but it’s more convenient to use Expression Blend for this. In Expression Blend there’s the States-tab on which you can create or edit the visual states of any control, even the default controls when using a custom template.\nThe process of creating visual states and transitions can be found on many places on the web. The difficulty, however, lies in triggering a visual state transition, which is done using the VisualStateHelper class from code in many of the examples you’ll find. If you’re doing MVVM this becomes cumbersome since you need to track the properties of the View and trigger the appropriate state changes from code.\n This is where behaviors come into the picture. Expression Blend 4 comes packed with a couple of behaviors that make it easy to do visual state changes without writing a single line of code. These are:\n GoToStateAction DataStateBehavior  GoToStateAction calls the VisualStateHelper.GoToState() when an event occurs. To what state to transition and on what event can be configured. DataStateBehavior acts as an if-else statement. In your ViewModel you expose a boolean property determining the state of your application. You configure through data binding to inspect this property and what visual states the application should go to when the value is either true or false. E.g. you can use this behavior for hiding / showing controls depending on user rights. On your ViewModel you define for example a CanEdit property of type boolean and using the DataStateBehavior you switch between the ReadOnlyState and EditableState visual states.\nWhen you want more functionality, there’s also the Expression Blend Samples. Although the name suggests differently, the Expression Blend Samples contains some very mature additions to the default Blend behaviors and triggers. The package included the DataStateBehavior since Blend 3, which is now packed with Blend 4. The package also contains the DataStateSwitchBehavior, which, as its name suggests, acts like a switch statement. It’s basically the same as the DataStateBehavior, but with multiple possible values besides just true or false. To use this behavior you expose an enumeration property on your ViewModel and use the DataStateSwitchBehavior to switch to particular visual states for each of the enumeration values. You can use this for example with the application roles of your application, e.g. Guest, Contributor and Administrator.\n ","date":"March 14, 2011","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2011/03/advanced-mvvm-doing-visual-states-properly/","summary":"An important plus of rich internet applications is the potential user experience you can achieve by applying UX patterns. A part of this is the visual states and their transitions. A visual state determines what the user interface looks like at a certain point in time and the transitions describe how the application moves from one visual state to the other, many times using animations to enhance the experience.","tags":null,"title":"Advanced MVVM: Doing visual states properly"},{"categories":["OData","Silverlight","SyncFX","Windows Phone 7"],"contents":"For a mobile platform, like Windows Phone 7, you may be required to allow an application to work even when there’s no data connection available. Doing so is not that easy. You need to manage state locally, synchronize changed data (one-way or duplex) and maybe even handle conflicts. Luckily Microsoft offers the Sync Framework which makes it easier for you to accomplish this by taking much of the required plumbing out of your hands completely. Currently there’s a community technology preview available of Sync Framework 4 (they skipped version 3 to be in line with other releases), Sync Framework 4 makes it even easier for clients to support synchronization because all synchronization logic has moved to the server.\nThe figure below shows the Sync Framework 4 architecture where the blue components are the ones provided by Microsoft and the orange components the ones you need to develop yourself. The Sync Logic block is the part that you can extend to allow for more granular control over de synchronization.\n\nFor synchronizing data, the Sync Framework makes use of the OData protocol. Since OData is an open standard all kinds of platforms are able to sync data with the Sync Framework. Out of the box the Sync Framework comes with a provider for SQL Server and SQL Azure. On the client the Sync Framework provides components for Isolated Storage so you can use sync without writing a line of code on both Silverlight for the desktop as Silverlight for Windows Phone 7.\nIn this article I’m going to demonstrate how to use the Sync Framework in your application for Windows Phone 7 by creating an application to manage a shopping list. As I was using the Sync Framework myself I ran into a couple of problems, so I will add my learnings as well.\n1. Prerequisites Before you can use the Microsoft Sync Framework, you need to install the framework itself. To obtain the framework please visit this page and download the file ‘Download Instructions.mht’. Once you open the file you are prompted with two steps. By following the first step you need to answer a few basic feedback questions before you are redirected to the Microsoft Connect site. Once you are transferred to the Microsoft Connect website, click on ‘Downloads’ menu option on the left. You’re now at the download page. Please read the description carefully. It tells you that you need to install the Microsoft Sync Framework 2.1 first before installing the 4.0 CTP. Choose the operating system version that is most appropriate to you. Note that when you’re running the 64-bit version of Windows you need to install the 32-bit redistributables of the Sync Framework 2.1 in order to test in Visual Studio.\nNow you have installed the Microsoft Sync Framework, the next step in this sample is setting up the sample database. To do this, download the following SQL file and open and run it in SQL Server Management Studio. This will create a new database named ‘ShoppingList’ and polulate some sample data.\n[ShoppingList.sql.zip](/images/ShoppingList.sql_1.zip)  ## 2. Generate Sync Configuration The sync configuration describes what data you want synchronized. The configuration contains the name and location of the data store, what entities to synchronize and what filters to apply to the entities so you can limit what data is exchanged over the wire. The configuration is used in the next steps to provision the database and generate client and server code.\nSince the sync configuration is an XML-file it’s off course possible to craft it by hand, but in this case we’re using the ‘SyncSvcUtilHelper’ tool to do it for us. This tool is limited in what it can do, so if you need more control over the configuration file you can always tweak it afterwards.\nThe ‘SyncSvcUtilHelper’ tool is a graphical user interface build on top of ‘SyncSvcUtil’ command line tool, which is meant to provision the database and generate code. Generating a sync config isn’t actually a functionality of the ‘SyncSvcUtil’ tool, but for easy of use it’s incorporated in the ‘SyncSvcUtilHelper’ anyway. You find both tools in the ‘bin’ directory of the Microsoft Sync Framework SDK installation directory, which is by default ‘C:Program FilesMicrosoft SDKsMicrosoft Sync Framework4.0bin’ on 32-bit and C:Program Files (x86)Microsoft SDKsMicrosoft Sync Framework4.0bin on 64 bit Windows.\nOnce you fire up ‘SyncSvcUtilHelper’ you’re presented with the main screen with 3 options:\n Generate or Edit Sync Configuration Provision or Deprovision Code Generation  \nBy executing all these three steps in this order gives you all you need to be able to sync data between server and a Silverlight-based client. In this case you obviously use the first option to generate the sync configuration. On the first screen specify a file name for the sync configuration file. It’s best to save the configuration file in the same directory as the ‘SyncSvcUtilHelper’ since you’re going to need it in the subsequent steps and the tool defaults to this directory.\n\nOn the next screen you need to enter the details of the database that you’ll use to sync data with. Click on the Add button to add a new database. Enter the details of your database and click the Save button to add your database. Click the Next button to go to the next screen.\n\nIn this screen you define the synchronization scopes of our application. A synchronization scope defines what data to synchronize for that scope. You can have multiple scopes for different synchronization purposes. In this case you use just one scope and name it ‘DefaultScope’. To add a scope click the Add button and enter the scope name. For schema name, use ‘dbo’ and make sure you check the box in front of ‘Is Template Scope’ since a template scope allows us to apply filters. Click the Save button and then Next to continue.\n\nHere is where you choose what entities (tables) you want to synchronize and on what columns you want to enable filtering. To choose the tables to synchronize, click the ‘Add/Edit’ button. In the new window select the database you’ve configured a few screens back and a list of tables is shown. Select all columns of both tables for syncing and enable filtering on the ‘Id’ column of the ‘User’ table and ‘UserId’ column of the ‘Item’ table. Click the ‘OK’ button to close the window and click the Next button to continue.\nOn the first screen you see when you chose step 2, you open the sync configuration file you created before. Since you only have one database and sync scope, they are selected by default, so you can just click the ‘Next’ button to continue.\n\nThe summary screen shows you the details of the sync configuration that’ll be saved to the file. Once you click the ‘Finish’ button, the file is created and the tool is closed.\n3. Provision the database Open the ‘SyncSvcUtilHelper’ tool again, but this time choose step 2, in which you’ll provision the database. By provisioning the database, additional tables are created for all the tables you configured in the sync configuration file. The additional tables store sync related information so the Sync Framework can calculate diffs and detect conflicts.\nOn the first screen you get once you chose step 2, you open the sync configuration file you created before. Since you only have a single sync scope and target database they’re selected by default. Click the ‘Next’ button to start provisioning the database.\n\nIf provisioning of the database was successful you can close the tool by clicking the ‘Finish’ button.\n\n4. Create the Sync Service A full Sync Framework solution consists of a Sync Service on the server that speaks OData and an offline context on the client for storing data offline and tracking changes. In this step you’ll create the Sync Service.\nTo do so you first need a web application to host the Sync Service. Fire up Visual Studio 2010 and create a blank solution (File \u0026gt; New Project \u0026gt; Blank Solution) and name it ‘ShoppingList’. Then add a new ASP.NET Empty Web Application to the ShoppingList solution, named ‘Web’. Add a reference to ‘Microsoft.Synchronization.Services.dll’ which can be found in the ‘Server’ directory of the Microsoft Sync Framework 4.0 installation directory.\nNow you have an empty web application to host you need to create the sync service. To do this you use the ‘SyncSvcUtilHelper’ tool again, but this time choose step 3. On the screen you’re presented with open the sync configuration file and click the ‘Next’ button.\n\nOn the ‘Select code generation parameters’ screen, select ‘Server’ as the codegen target. Specify the ‘Web’ directory of your ShoppingList solution as the output directory. You can choose whatever language, namespace and output file prefix you like. I used the parameters as in the screenshot below. Click the ‘Next’ button to start the code generation.\n\nIf the code generation completed successfully you can close the tool and return to Visual Studio. In the solution explorer, click the button to show all files and include both DefaultScopeEntities.cs and DefaultScopeSyncService.svc.\nBefore you can use the Sync Service, you need to change a couple of lines of code. Right click DefaultScopeSyncService.svc and choose ‘View code’. Replace the body of the ‘InitializeService’ method with the following lines of code:\nconfig.ServerConnectionString = @\u0026ldquo;Data Source=.SQL2008;Initial Catalog=ShoppingList;Integrated Security=True;MultipleActiveResultSets=True\u0026rdquo;; config.SetEnableScope(\u0026ldquo;DefaultScope\u0026rdquo;); config.AddFilterParameterConfiguration(\u0026ldquo;userId\u0026rdquo;, \u0026ldquo;User\u0026rdquo;, \u0026ldquo;@Id\u0026rdquo;, typeof(int)); config.AddFilterParameterConfiguration(\u0026ldquo;userId\u0026rdquo;, \u0026ldquo;Item\u0026rdquo;, \u0026ldquo;@UserId\u0026rdquo;, typeof(int)); config.SetSyncObjectSchema(\u0026ldquo;dbo\u0026rdquo;); config.UseVerboseErrors = true; config.EnableDiagnosticPage = true;\nLines 1 and 2 define the connection string to the database and which scope to use for synchronization.\nLines 3 and 4 are used to add a mapping for parameter ‘userId’ to the filters you defined when creating the sync configuration file. By using the same parameter name for both filters, the client only has to provide a single value to be able to filter both tables.\nThe lines 6 and 7 are only used for diagnostics and should be turned off in a production environment. UserVerboseErrors enables full errors to be send back to the client in case of an exception. This comes in handy when trying to find out why you’re service isn’t syncing properly. EnableDiagnosticsPage enables a page that shows you whether the basic server configuration is valid. This page is the first thing you check if you want to know if the Sync Service is working.\nNow check if your Sync Service is working by right clicking ‘DefaultScopeSyncService.svc’ and choosing ‘View in browser’. The page should load correctly. Then change the ‘$syncscopes’ parameter in the url to ‘$diag’ and press enter. If all tests passed, except for the ClientAccessPolicy/CrossDomain files, you’re ready to continue to create the Windows Phone 7 client.\n5. Create the Windows Phone 7 client Add an empty Windows Phone 7 application to the solution. In this example I named it ‘ShoppingList’. Add a reference to ‘Microsoft.Synchronization.ClientServices.dll’ which can be found in the ‘ClientWP7′ directory of the Microsoft Sync Framework 4.0 installation directory. Also add a reference to the Silverlight 3 version of ‘System.ComponentModel.DataAnnotations.dll’. This assembly van be found in C:Program FilesMicrosoft SDKsSilverlightv3.0LibrariesClient (32 bit) or C:Program Files (x86)Microsoft SDKsSilverlightv3.0LibrariesClient (64 bit).\nIn order to access the sync service and use the entities, you need to generate the client code. Start the ‘SyncSvcUtilHelper’ tool and follow the same steps as when generating code for the server. This time choose ‘IsolatedStore Client’ as the codegen target and specify the Windows Phone 7 application directory, ‘ShoppingList’. The ‘IsolatedStore Client’ generates code that uses IsolatedStorage for storing the synced entities and can be used for both Silverlight for the desktop as for Windows Phone 7. Click the ‘Next’ button to start the code generation.\n\nIf the code generation completed successfully you can close the tool and return to Visual Studio. Make sure the Windows Phone 7 project is selected and in the solution explorer, click the button to show all files and include both DefaultScopeEntities.cs and DefaultScopeOfflineContext.cs.\nNow open up MainPage.xaml.cs and replace all the code with the following:\nusing System; using Microsoft.Phone.Controls; using Microsoft.Synchronization.ClientServices.IsolatedStorage; namespace ShoppingList { public partial class MainPage : PhoneApplicationPage { private DefaultScope.DefaultScopeOfflineContext context; // Constructor public MainPage() { InitializeComponent(); context = new DefaultScope.DefaultScopeOfflineContext( \u0026ldquo;ShoppingList\u0026rdquo;, new Uri(\u0026ldquo;http://localhost/ShoppingList/DefaultScopeSyncService.svc\u0026rdquo;) ); context.CacheController.ControllerBehavior.AddScopeParameters(\u0026ldquo;userId\u0026rdquo;, \u0026ldquo;1\u0026rdquo;); DataContext = context; context.LoadCompleted += context_LoadCompleted; context.LoadAsync(); } void context_LoadCompleted(object sender, LoadCompletedEventArgs e) { context.CacheController.RefreshAsync(); } private void ApplicationBarIconButton_Click(object sender, EventArgs e) { context.CacheController.RefreshAsync(); } } }\nIn lines 16 to 19 the DefaultScopeOfflineContext is initialized with the path in IsolatedStorage to store the offline data and the Uri to the sync service. In line 20 a parameter is added for the userId. For each client parameter name on the server you need to add a scope parameter on the client. In this case there’s just a single client parameter ‘userId’, which is mapped on the server to two table fields. In the sample data in the database there are two users you can try: IDs 1 and 2. In line 21 the DefaultScopeOfflineContext is set as DataContext so you can use it in the XAML bindings. In lines 23 and 24 an event handler for LoadComplete is assigned and the context is asked to load the offline stored data from IsolatedStorage. Once the offline data is loaded, the CacheController is asked to refresh, which calls the sync service to synchronize the offline data with the live data on the server. Once the sync completes, the data in the offline context is in sync with the server data, which is done in line 34.\nOpen up MainPage.xaml and add a ListBox to the ContentPanel Grid using the following piece of XAML. This creates a ListBox that binds to the ItemCollection propery of the DefaultScopeOfflineContext which contains the items in your shopping list. A CheckBox is used so you can mark the item as bought.\nphone:PhoneApplicationPage.ApplicationBar \u0026lt;shell:ApplicationBar IsVisible=\u0026ldquo;True\u0026rdquo; IsMenuEnabled=\u0026ldquo;True\u0026rdquo;\u0026gt; \u0026lt;shell:ApplicationBarIconButton IconUri=\u0026quot;/Images/appbar_button1.png\u0026quot; Text=\u0026ldquo;Sync\u0026rdquo; Click=\u0026ldquo;ApplicationBarIconButton_Click\u0026rdquo;/\u0026gt; \u0026lt;/shell:ApplicationBar\u0026gt; \u0026lt;/phone:PhoneApplicationPage.ApplicationBar\u0026gt;\nReturn to the MainPage.xaml.cs and add the event handler for the ApplicationBar button using the following piece of code. This makes sure any changes made by the user are persisted to the IsolatedStorage first and then start the synchronization.\nprivate void ApplicationBarIconButton_Click(object sender, EventArgs e) { context.SaveChanges(); context.CacheController.RefreshAsync(); }\nNow your application is ready to test! Make sure the Windows Phone 7 project is marked as startup project and then press ‘F5′ to start debugging. Once the application is started you should soon see a list of shopping list items. Try making changes on the client by marking an item as bought and click the sync button and notice that the IsBought value changed in the database. Also try adding additional items to the Item table in the database and notice the items appear in the list in the Windows Phone 7 client as soon as you click the sync button again.\n\nDebugging a sync service Having trouble with your sync service, but don’t have a clue what’s wrong? Debugging a sync service is a bit tricky. As you probably noticed during your own investigation, you can handle the RefreshCompleted event of the CacheController, but all you find when inspecting the Error property of the RefreshCompletedEventArgs is a ‘The remote server returned an error: NotFound.’. Before explaining how to do it, here are a few questions I compiled after stepping into a couple of common errors myself:\n Open the Diagnostics page. Do all tests pass? Did you provision the database? Re-provisioning doesn’t hurt, so just try it. Did you add lines of code to the sync service code behind setting the connection string and sync scope name? When regenerating the server code, this file could be overwritten. Did you add filter parameter configurations for all the filter parameters in your sync service config on the server? Did you add parameters on the client for each parameter mapping on the server? Are the names and types of the filter parameters on the server equal to the GlobalName values in your sync service configuration? Does the account under which the sync service runs have access to the database in the connection string? Did you specify the correct Uri on the client? Try the Uri in your browser to make sure it is correct.  If all of the above didn’t help it’s time to start debugging the sync service. For debugging you use a common HTTP-traffic monitor tool called Fiddler2. Download Fiddler2 and install it. Next start Fiddler2 and configure it to allow remote connections, as described in this blog post. You should be able to capture the internet traffic of the Windows Phone 7 emulator by now. Make sure you start the emulator after you started Fiddler2, so if it is running, restart it first. Open internet explorer on the emulator and browse to a particular website. Fiddler2 should show you the internet traffic.\nSince the ASP.NET Development Service doesn’t allow remote connections and the emulator is regarded as a remote device, you need to configure the web application to run in IIS. Note: I assume you’re running Vista or Windows 7 and you already installed IIS 7. Open the properties of the web project and go to the ‘Web’ tab. Select to use the local IIS web server and specify a Url, see example below. Click ‘Create Virtual Directory’ to create the virtual directory if it doesn’t exist yet.\n\nFiddler2 doesn’t capture traffic going to localhost, so in order to capture your sync service traffic go to MainPage.xaml.cs in your Windows Phone 7 application and replace localhost with the computer name in the Uri to the sync service. Make sure the Uri points to the IIS hosted sync service.\nIn the DefaultScopeSyncService.svc.cs file in your web project, make sure you enabled UserVerbodeLogging by adding the following line of code:\nconfig.UseVerboseErrors = true;\nNow, if you encounter a synchonization error, go into Fiddler2 and lookup the faulted web session, which is indicated with status 500. Click the ‘TextView’ button of the response area (bottom right part of the screen) in order to see the plain error message that was transmitted over the wire.\n\n[Download sample project](/images/ShoppingList1.zip)  ","date":"January 21, 2011","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2011/01/using-the-sync-framework-on-windows-phone-7/","summary":"For a mobile platform, like Windows Phone 7, you may be required to allow an application to work even when there’s no data connection available. Doing so is not that easy. You need to manage state locally, synchronize changed data (one-way or duplex) and maybe even handle conflicts. Luckily Microsoft offers the Sync Framework which makes it easier for you to accomplish this by taking much of the required plumbing out of your hands completely.","tags":["OData","Silverlight","SyncFX","Windows Phone 7"],"title":"Using the Sync Framework on Windows Phone 7"},{"categories":["Bing","geolocate","location","wp7"],"contents":"The Windows Phone 7 SDK contains a couple of APIs for interacting with different parts of the phone hardware, like accessing the camera or initiating a phone call. One of the cool APIs of Windows Phone 7 is the Location API. Just as in the desktop version of .NET Framework 4.0, the Location API enables you to get the approximate location of the user. To find the location of the user, the API uses GPS, WiFi or cell tower triangulation, where the first is the most and the latter least accurate. The API hides the method of determining the location for you as a developer and will attempt to use the most accurate available method. By default it uses cell tower triangulation, but if you tell it you need high accuracy it will try WiFi or GPS when available. For you as a developer you need to carefully determine the level of accuracy, since the more accurate method the slower and more power consuming it gets.\nIn this example I’ll show you how to use the Location API. First off I created a new Windows Phone application using the ‘Windows Phone Databound Application’ project template. You can use any of the project templates, but I chose this one because I like to use MVVM all the time. The next thing I do is changing the UI. Because I use the Bing maps control, make sure you reference the Microsoft.Phone.Controls.Maps.dll assembly. Also add a reference to the namespace to the MainPage.xaml, like this:\nxmlns:maps=\u0026ldquo;clr-namespace:Microsoft.Phone.Controls.Maps;assembly=Microsoft.Phone.Controls.Maps\u0026rdquo;\nWe will use a TextBlock to show the current estimated address and a Maps control to show your current estimated location on a map. Replace the complete contents of the ContentPanel Grid with the following XAML snippet. You may need to remove some code from the codebehind of MainPage.xaml because it references the ListBox we remove.\n \u0026lt;maps:Map Center=\u0026quot;{Binding Location, Mode=TwoWay}\u0026quot; ZoomLevel=\u0026ldquo;13\u0026rdquo;\u0026gt; maps:Map.CredentialsProvider \u0026lt;maps:ApplicationIdCredentialsProvider ApplicationId=\u0026quot;\u0026quot;/\u0026gt; \u0026lt;/maps:Map.CredentialsProvider\u0026gt; \u0026lt;maps:Pushpin Content=\u0026ldquo;You are here\u0026rdquo; Location=\u0026quot;{Binding Location}\u0026quot; /\u0026gt; \u0026lt;/maps:Map\u0026gt; \nIn order to use the Bing maps control, you need your own key. Request a key on the Bing maps portal.\nIn the XAML I’ve used bindings to Status, Address and Location properties. These properties do not yet exist, so the next thing is to add these properties to the MainViewModel class in MainViewModel.cs. The Status property is of type GeoPositionStatus and contains the status of the GeoCoordinateWatcher, the Address property is a string containing the current estimated address and the Location property is of type GeoCoordinate, which is a type used to represent a lat/long position. The following code snippet shows you the three properties to be added to the view model:\nprivate GeoPositionStatus _status; ///  /// Contains the status of the GeoCoordinateWatcher to see if it is initializing, ready or not getting any data. ///  ///  public GeoPositionStatus Status { get { return _status; } set { if (value != _status) { _status = value; NotifyPropertyChanged(\u0026ldquo;Status\u0026rdquo;); } } } private string _address; ///  /// Contains the current estimated address as returned by the reverse geolocation web service. ///  ///  public string Address { get { return _address; } set { if (value != _address) { _address = value; NotifyPropertyChanged(\u0026ldquo;Address\u0026rdquo;); } } } private GeoCoordinate _location; ///  /// Contains the current estimated lat/long location as returned by the GeoCoordinateWatcher. ///  ///  public GeoCoordinate Location { get { return _location; } set { if (value != _location) { _location = value; NotifyPropertyChanged(\u0026ldquo;Location\u0026rdquo;); } } }\nNow that we’ve set up our UI and bindings, it’s time to start using the Location API. The Location API consists of two classes: GeoCoordinateWatcher and CivicAddressResolver, just like in the desktop framework. The GeoCoordinateWatcher does the heavy lifting of calculating the approximate lat/long of the phone, while the CivicAddressResolver translates the lat/long to a human readable address using reverse geolocation. Unlike the desktop version of the .NET Framework, the CivicAddressResolver isn’t implemented on the phone. Instead of throwing an exeption it will always tell you the address is unknown. This means we can’t use this class yet to resolve the lat/long to an address. Instead we will use the Bing web service for that, but more on that later.\nIn order to get the lat/long of our current position, we need to create an instance of the GeoCoordinateWatcher, subscribe to the StatusChanged and PositionChanged event and start listening for position changes. The following lines of code will do just that:\nGeoCoordinateWatcher gcw; public MainViewModel() { Items = new ObservableCollection(); gcw = new GeoCoordinateWatcher(GeoPositionAccuracy.High); gcw.StatusChanged += gcw_StatusChanged; gcw.PositionChanged += gcw_PositionChanged; gcw.Start(); } void gcw_StatusChanged(object sender, GeoPositionStatusChangedEventArgs e) { Status = e.Status; } void gcw_PositionChanged(object sender, GeoPositionChangedEventArgs e) { Location = e.Position.Location; Address = String.Format(\u0026quot;{0}, {1}\u0026quot;, Location.Latitude, Location.Longitude); }\nIn other examples on the web you’ll find that most of the time also the StatusChanged event of the GeoCoordinateWatcher is handled to see if it is ready before listening for position changes. Because you could get a PositionChanged event before you’ve even received a StatusChanged event, it’s not very useful to do so and may cause you to miss the PositionChanged event. So be sure just to listen for the PositionChanged event and only use the StatusChanged event to display the status, like done in this example.\nIn this case I used the default constructor of the GeoCoordinateWatcher, which uses the default accuracy (which only uses cell tower triangulation). If I wanted, I could pass in GeoPositionAccuracy.High as a parameter, which tells the GeoCoordinateWatcher to use WiFi triangulation or GPS when available. The PositionChangedEvent gives you a property ‘HorizontalAccuracy’ which tells you, in meters, how accurate the detection of the position was and allows you to filter for specific accuracy. Note that when done indoors and without a WiFi connection, it won’t provide a better accuracy then the default, since only cell tower triangulation is available.\nThe event handler for the StatusChanged event updates the Status property and the PositionChanged event handler updates the Location property and takes the latitude and longitude and concatenates them into the Address property.\nNow if you run the application in the emulator by pressing F5 (which is the default), you’ll notice that nothing happens and the status is ‘NoData’. This is because the emulator doesn’t emulate location data. There are two things you can do:\n  Simulate location data using this technique described by Tim Heuer.\n  Test on your Windows Phone. This requires your phone being developer unlocked.\nIf you have the possibility to test on a physical Windows Phone, I’d highly recommend it. During my tests it appeared the location data on the phone wasn’t what I expected. For instance, the GeoLocationWatcher was unable to find my location using cell tower triangulation as soon as I have HSDPA connectivity. This probably has something to do with the way HSDPA works. It also shows you that the GeoCoordinateWatcher may jump between NoData and Ready every now and then when e.g. connection is lost or the phone switches to a different type of connection.\n  As soon as you run the application on an actual phone you’ll see something similar to this:\nNow that we’re able to obtain the lat/long of our estimated position, I’d like to translate the lat/long into an address I can understand. As mentioned earlier, we can’t use the the CivicAddressResolver class since it’s not implemented for Windows Phone 7. Instead we’ll use the Bing web service. In order to do this, add a service reference to the following URL:\nhttp://dev.virtualearth.net/webservices/v1/geocodeservice/geocodeservice.svc\nAdding the service reference also creates a new file ‘ServiceReferences.ClientConfig’ to your project. This file contains the WCF bindings required for calling the web service. By default it will add two end points: a SOAP endpoint (the first) and a Binary endpoint (the second). Because WCF can’t decide by itself which of the two to use, we remove the SOAP binding from the file.\nNow we want to modify our code to call the ReverseGeocode service method once we receive a position update. In order to do so we modify the MainViewModel class. First we add a field of type GeocodeServiceClient. In the constructor we initialize the field and handle the ReverseGeocodeCompleted event. In the event handler we check if any addresses are returned and display the first found address. In the PositionChanged event hander of the GeoCoordinateWatcher, instead of setting the Address property using the lat/long values, we construct a ReverseGeocodeRequest using the Bind key we used earlier and the lat/long values and call the ReverseGeocodeAsync method. The changes to the MainViewModel are shown in the following snippet (changes are in bold):\nGeoCoordinateWatcher gcw; GeocodeServiceClient gsc; public MainViewModel() { Items = new ObservableCollection(); gsc = new GeocodeServiceClient(); gsc.ReverseGeocodeCompleted += gsc_ReverseGeocodeCompleted; gcw = new GeoCoordinateWatcher(GeoPositionAccuracy.High); gcw.StatusChanged += gcw_StatusChanged; gcw.PositionChanged += gcw_PositionChanged; gcw.Start(); } void gcw_StatusChanged(object sender, GeoPositionStatusChangedEventArgs e) { Status = e.Status; } void gcw_PositionChanged(object sender, GeoPositionChangedEventArgs e) { Location = e.Position.Location; var request = new ReverseGeocodeRequest(); request.Credentials = new Credentials { ApplicationId = @\u0026ldquo;MyApplicationId\u0026rdquo; }; request.Location = new Location { Latitude = e.Position.Location.Latitude, Longitude = e.Position.Location.Longitude }; gsc.ReverseGeocodeAsync(request); } void gsc_ReverseGeocodeCompleted(object sender, GeoCodeService.ReverseGeocodeCompletedEventArgs e) { if (e.Result.Results.Count == 0) Address = \u0026ldquo;No address found\u0026rdquo;; else Address = e.Result.Results[0].DisplayName; }\nNow if we run the application, we don’t see the lat/long values, but instead see a readable address of our estimated location.\nThere are a couple of things wrong with this implementation. First, each time the position is changed a new web request is done to get the address, even if the location didn’t change (much). Second, if a web request is underway, it’s not cancelled, but instead a new web request is done. This could lead to a racing condition where the second request would complete before the first, resulting in the address of the first location being displayed. Third, the PositionChanged event keeps firing, even if the position doesn’t change. This costs unnecessary resources on the phone.\nThe third flaw could be overcome by using a MovementThreshold. MovementThreshold is a property on the GeoCoordinateWatcher and specifies the amount of movement is necessary before a new PositionChanged event is fired. A common MovementThreshold is one of 20.0, e.g.:\ngcw = new GeoCoordinateWatcher(GeoPositionAccuracy.High); gcw.MovementThreshold = 20.0; gcw.StatusChanged += gcw_StatusChanged; gcw.PositionChanged += gcw_PositionChanged; gcw.Start();\nThe first two flaws can be overcome by writing more boilerplate code, like starting timers and cancelling web requests. This could easily lead to hard to read code since it is all scattered around. A way to simplify things is to use Reactive Extensions, but that’s food for another blog post.\n[Download sample project](/images/LocationApiSample1.zip)  ","date":"December 6, 2010","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2010/12/building-a-location-aware-windows-phone-7-application-2/","summary":"The Windows Phone 7 SDK contains a couple of APIs for interacting with different parts of the phone hardware, like accessing the camera or initiating a phone call. One of the cool APIs of Windows Phone 7 is the Location API. Just as in the desktop version of .NET Framework 4.0, the Location API enables you to get the approximate location of the user. To find the location of the user, the API uses GPS, WiFi or cell tower triangulation, where the first is the most and the latter least accurate.","tags":["Bing","geolocate","location","wp7"],"title":"Building a location aware Windows Phone 7 application"},{"categories":["OData","Silverlight","WCF RIA Services"],"contents":"After struggling with WCF RIA Services v1 (Silverlight 4 RTM) to enable insert/update for the OData endpoint for use with Windows Phone 7, I finally figured it out. The current version of WCF RIA Services does NOT support update or LINQ! I think I searched for a couple of hours until I found the single line of information on this in this following Silverlight TV post:\n NOTE: The ODATA endpoint has very limited support in V1. There is no Update or LINQ query support in this release.\n ","date":"November 24, 2010","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2010/11/wcf-ria-services-odata-endpoint-does-not-support-update-or-linq/","summary":"After struggling with WCF RIA Services v1 (Silverlight 4 RTM) to enable insert/update for the OData endpoint for use with Windows Phone 7, I finally figured it out. The current version of WCF RIA Services does NOT support update or LINQ! I think I searched for a couple of hours until I found the single line of information on this in this following Silverlight TV post:\n NOTE: The ODATA endpoint has very limited support in V1.","tags":["OData","Silverlight","WCF RIA Services"],"title":"WCF RIA Services OData endpoint does NOT support update or LINQ"},{"categories":["code","Editor","Guide","MCE","source"],"contents":"I got a few requests for the source code of MCE Guide Editor. I once started working on a new release of it and during the process I discovered that the solution I chose wasn’t going to work. This meant I didn’t have the source of the working version of the tool. What I did was disassemble the executable. I’m currently working on a Windows 7 PC, so I wasn’t able to compile the disassembled code because I’m missing the ehome dll. However, people who know what to do with source code can easily fix the problems that are in there.\nFeel free to do with it what you like. If you managed to improve it or made it work on XP or Win7, please drop me a line. Get it below.\n[download#6#image]\n","date":"January 28, 2009","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2009/01/mce-guide-editor-source-code/","summary":"I got a few requests for the source code of MCE Guide Editor. I once started working on a new release of it and during the process I discovered that the solution I chose wasn’t going to work. This meant I didn’t have the source of the working version of the tool. What I did was disassemble the executable. I’m currently working on a Windows 7 PC, so I wasn’t able to compile the disassembled code because I’m missing the ehome dll.","tags":["code","Editor","Guide","MCE","source"],"title":"MCE Guide Editor source code"},{"categories":["Avanade","brand","car"],"contents":"Today I witnessed the arrival of eight Avanade branded Fiat 500 cars. They arrived in a single line in front of our main office, where they stand now. The orange / black color combination draws a lot of attention and enthousiasm. Together with the branding and racing stripes they form the perfect car for our core services team. Secretly, in our hearts, the customer facing employees, driving our big luxurous lease cars, would die to drive one of these babies ourselves.\nUpdate Added a few extra photo’s in better quality.\n  \n","date":"November 28, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/11/honk-twice-if-you-see-us/","summary":"Today I witnessed the arrival of eight Avanade branded Fiat 500 cars. They arrived in a single line in front of our main office, where they stand now. The orange / black color combination draws a lot of attention and enthousiasm. Together with the branding and racing stripes they form the perfect car for our core services team. Secretly, in our hearts, the customer facing employees, driving our big luxurous lease cars, would die to drive one of these babies ourselves.","tags":["Avanade","brand","car"],"title":"Honk twice if you see us!"},{"categories":[".net magazine","add-in","Media Center","vista"],"contents":"It’s been a while since I wrote an article on developing Vista Media Center Add-ins. A month ago the article was published in the Dutch .Net Magazine and today I found the digital version is available as well. In the article I demonstrate how to use the Viddler.com API to get a list of videos and display them in your add-in. The goal was to build a player for Viddler.com videos, but unfortunately the API method for getting the raw video is still not available. Even though it’s a good read, if you’re Dutch that is.\nRead it here.\n","date":"November 24, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/11/building-vista-media-center-add-ins-dutch/","summary":"It’s been a while since I wrote an article on developing Vista Media Center Add-ins. A month ago the article was published in the Dutch .Net Magazine and today I found the digital version is available as well. In the article I demonstrate how to use the Viddler.com API to get a list of videos and display them in your add-in. The goal was to build a player for Viddler.com videos, but unfortunately the API method for getting the raw video is still not available.","tags":[".net magazine","add-in","Media Center","vista"],"title":"Building Vista Media Center Add-ins (Dutch)"},{"categories":["Dublin","Ice hockey","Oslo","PDC","Windows 7"],"contents":"Yesterday afternoon we (my collegues and I) arrived in LA. Purpose of visit: the Microsoft Professional Developer Conference 2008 (PDC’08). It promises to be a very interesting week with a lot of new stuff from Microsoft, including Windows 7, ‘Oslo’ and ‘Dublin’. After arrival we checked into our rooms, grabbed a slice of pizza, had a drink and went to bed. We tried to join the party by Jeffrey Pallermo, but the waiting time was about 40 minutes and we heard there was no more beer (no problem for me as non-alcohol drinking person, but some of my collegues seemed to mind :)). Today will be the first real day of the conference which is kicked off by the keynote of Ray Ozzie and others. After the keynote we have plenty of sessions to choose from. Although I’m not yet sure about my planning for the day, it’ll probably look something like:\n 8:30 AM – 11:00 AM Keynote 11:00 AM – 12:15 PM Under the Hood: Advances in the .NET Type System 12:45 PM – 1:30 PM Microsoft Expression Blend: Tips \u0026amp; Tricks or “Dublin” and .NET Services: Extending On-Premises Applications to the Cloud 1:45 PM – 3:00 PM Identity: “Geneva” Server and Framework Overview or Developing for Microsoft Surface or The Future of C# 3:30 PM – 4:45 PM A Lap around Cloud Services Part 2 5:15 PM – 6:30 PM Developing and Deploying Your First Cloud Service  For the evening we have planned to go to the LA Kings ice hockey match in the Staples Center, next to the conference center. This looks like it’s gonna be a day full of fun and information.\n","date":"October 27, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/10/day-0-arrived-in-la/","summary":"Yesterday afternoon we (my collegues and I) arrived in LA. Purpose of visit: the Microsoft Professional Developer Conference 2008 (PDC’08). It promises to be a very interesting week with a lot of new stuff from Microsoft, including Windows 7, ‘Oslo’ and ‘Dublin’. After arrival we checked into our rooms, grabbed a slice of pizza, had a drink and went to bed. We tried to join the party by Jeffrey Pallermo, but the waiting time was about 40 minutes and we heard there was no more beer (no problem for me as non-alcohol drinking person, but some of my collegues seemed to mind :)).","tags":["Dublin","Ice hockey","Oslo","PDC","Windows 7"],"title":"Day 0: arrived in LA"},{"categories":["Sharepoint","WCF"],"contents":"By default the SharePoint Designer is unable to consume WCF services because it fails to recognize the structure of the request messages. There is a workaround if you still need to consume WCF services using the Designer. However, this does not work via the datasource wizard but instead requires some manual intervention. There are two methods to do accomplish this:\n Modify the datasource Modify the code in the page  The first method is easier to implement and gives you more control over the output. The only downside is that the WCF service must use a wrapped request message contract. This means that you either need full control over the WCF service so you can enable the request message to be wrapped, or you have to be lucky that the WCF service you’re trying to consume uses wrapped message contracts. From the WSDL it’s difficult to see if wrapped message contracts are used. If you’re not sure you can try the first method. If the Designer crashes as soon as you want to use the modified data source, the WCF service probably doesn’t support it. If you have full control over your service, the first method will also describe how te enable wrapped message contracts.\nMethod 1: Modify the datasource To consume a WCF service in the Designer by modifying the datasource you perform the following steps:\n Enable wrapped message contracts Create a datasource using the wizard Obtain request message by calling the service with Webservice Studio Modify the soap envelope of the datasource  1.1 Enable wrapped message contracts In this step you’ll set the IsWrapped property of the request message contract to True.\nIf you used Web Service Software Factory for creating your WCF service you can set the request message contract to be wrapped in the service contract model. Open the service contract model and select the request message contract. In the properties window of the message contract you change Is Wrapped to True. Save the model and generate the code for the service contract.\nIf you didn’t use Web Service Software Factory you can have the request message contract set to wrapped by modifying the MessageContract atribute. Open the file containing the request message contract and locate the MessageContract attribute. Make sure that the attribute does not set IsWrapped to False. If it does you can simply remove the property assignment or you set it to True, which is the default value. You can also give the wrapper a name and namespace if you like, but this is not required. In the end your message contract should look a little similar to the code sample below:\n[sourcecode language=”csharp”]\n///\n /// Service Contract Class – HelloWorldRequestMessage ///  [WCF::MessageContract(\nWrapperName = “HelloWorldRequestMessage”,\nWrapperNamespace = “urn:HelloWorldService.ServiceContracts”)]\npublic partial class HelloWorldRequestMessage\n{\nprivate string name;\n[WCF::MessageBodyMember(Name = “Name”)]\npublic string Name\n{\nget { return name; }\nset { name = value; }\n}\n}\n[/sourcecode]\nWhether you changed the wrapped value using WSSF or directly in the code, you should make sure to rebuild your project.\n1.2 Create a datasource using the wizard In this step you’ll create a new datasource using the Sharepoint Designer wizard. Open Sharepoint Designer, connect to your site and go to the Datasource Library tab on the right side of your screen. Click on the Connect to a webservice link underneath the XML Web Services. In de dialog you enter the URL to your services endpoint and click the Connect Now button. The wizard will connect to your web service and present you a list of endpoints and methods. It doesn’t matter which endpoint or method you select here, because we’ll change that later. Click OK to exit the wizard and create the new datasource.\n1.3 Obtain request message by calling the service with Webservice Studio In this step you’ll obtain the appropriate request message for calling your webservice. Because the request message generated by the Sharepoint Designer wizard is incorrect you need to replace that with the correct one. For this purpose we’ll use Webservice Studio (http://www.codeplex.com/WebserviceStudio).\nBefore calling the web service you should make sure you have the URL to the service’s WSDL and that the service is running.\nTo call a web service you start Webservice Studio, type the URL to the service’s WSDL in the WSDL Endpoint drop down list and click on the Get button. Webservice Studio attempts to create a proxy for the WSDL it found at the specified URL.\nOnce the creation of the proxy is finished you are promted with the web service’s methods on the left. By clicking on a method the required input parameters are shown and you are able to specify their values.\nOnce you’ve specified the required parameters you can call the web service by clicking the Invoke button. The response of the web service is shown in the Output window if the call was successful. We then move to the Request/Response tab to be able to view the raw request message. Copy the soap:Envelope record of the request message and store it somewhere so we can use it in our next step.\n1.4 Modify the soap envelope of the datasource In this step you’ll modify the XML Webservice datasource of the Sharepoint Designer.\nTo access the datasources you need to be connected to your site using the Sharepoint Designer. In the site’s tree you navigate to _catalogsfpdatasources. This directory contains xml files with the datasource configurations. Open the xml file that has the name of your service. The contents will look similar to this (reformatted for better reading):\n[sourcecode language=”xml”]\nHelloWorldService    ]]    [/sourcecode] The soap:Envelope part is what we’re interested in. Replace the complete soap:Envelope with the soap envelope you obtained using Webservice Studio. Now your datasource will look similar to this (reformatted for better reading):\n[sourcecode language=”xml”]\nHelloWorldService   Sander ]]     [/sourcecode] Note that the soap:Body is completely different from what the Designer’s wizard gave you. After modifying the soap:Envelope you can save the changes to the datasource. Refresh the list of datasources in the Datasource Library and use the datasource like you would any other. Be careful not to reconnect the datasource using the wizard because that would render it unusable again.\nMethod 2: Modify the code in the page To consume a WCF service in the Designer by modifying the code in the page you perform the following steps:\n Obtain request message by calling the service with Webservice Studio Complete DataFormWebPart XML Paste XML in WebPart  2.1 Obtain request message by calling the service with Webservice Studio This step is the same as in the previous method.\n2.2 Complete DataFormWebPart XML After obtaining the request message of the web service we can complete the XML of a DataFormWebPart. Below is the basis of the DataFormWebPart. Have a look at the structure and then continue reading on how to complete it.\n[sourcecode language=”xml”]\n  {MeteringPointName}\n{MeterName}\n\n   \n\n\n\n\n\n\n  '     [/sourcecode]The SharePoint:SoapDataSource contains a couple of attributes that need to be set. The first is the WsdlPath, which is the same path as you used in Webservice Studio. Then there’s the select path, which in most cases is almost identical to the WsdlPath with ‘?wsdl’ removed from the end. The SelectAction is the soap action of the method you’d like to call. If you’re uncertain what this value should be, you can look it up in Webservice Studio, on the left side of the Request/Response tab. SelectPort is the name of the endpoint of the service. This is specified in the Wsdl as the name of the binding to which the operation belongs. The last attribute is the SelectServiceName attribute. It’s value is the name of the method. If you’re unsure of the values of the latter two attributes, you can use the add XML Webservice wizard to obtain them.\nA little below the SharePoint:SoapDataSource you find the SelectCommand. The SelectCommand should contain the soap envelope you’ve obtained using Webservice Studio. You can substiture the values of the parameters by variable names enclosed by braces. This allows the value of the parameter to be set via Web Part connection. In you do this you should also make sure to add the parameter to the SelectParameters and ParameterBindings collections.\nThe last thing you probably want to do is to modify the XSL for the desired output. This is pretty straightforward if you’re familiar with XSL. If not, there’s a lot of content out on the web to help you get started.\n2.3 Paste XML in WebPart All the hard work is done in the previous steps. The only thing to do now is to copy the completed XML from the previous step and paste it inside a WebPart. The easiest way to do this is by selecting the split view in the SharePoint Designer and then clicking on a WebPart. This selects the code of the WebPart. Find the  tags and paste the XML between them. Once you save the document it will update the design and call the WCF service.\n","date":"October 23, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/10/consume-wcf-service-using-sharepoint-designer/","summary":"By default the SharePoint Designer is unable to consume WCF services because it fails to recognize the structure of the request messages. There is a workaround if you still need to consume WCF services using the Designer. However, this does not work via the datasource wizard but instead requires some manual intervention. There are two methods to do accomplish this:\n Modify the datasource Modify the code in the page  The first method is easier to implement and gives you more control over the output.","tags":["Sharepoint","WCF"],"title":"Consume WCF service using Sharepoint Designer"},{"categories":null,"contents":"I’ve done my share of work with the Web Service Software Factory modelling edition, but never have I liked the solution structure it generates for me. Or either the namespaces of the projects are wrong, or the paths became too long because of the fully qualified names I’d use. This time I reserved some time to tackle this once and for all. The result is an easy to apply patch for WSSF: Modelling Edition.\nWhat does it do:\n Does not add the service name to each project but name them simply BusinessEntities, ServiceImplementation or DataContracts Let the user choose his own namespace, which is then added to each project name. E.g. a user chooses the namespace MyCompany.MyProduct. The BusinessEntities project then gets the namespace MyCompany.MyProduct.BusinessEntities. Names the host application after the service instead of just ‘Host’  What doesn’t it do:\n It doesn’t change the assembly name. There seems to be a bug in the templating system of Visual Studio so the AssemblyName property of a template project is always set to the project name. I haven’t tested this with Visual Studio 2008 SP1, so I’m interested to know if that service pack solves this. It currently doesn’t work for ASMX implementation project, only for WCF implementation projects. I don’t think ASMX is done with WSSF that much these days, so I didn’t bother to implement it for ASMX.  How to apply the patch:\n Download the zip file containing the patched files from the bottom of this post. Extract the contents of the zip file to the “C:Program FilesMicrosoft Service Factory Feb 2008Guidance Package” directory (or other directory where you installed WSSF), replacing the existing files. Create a backup if you want to revert to the existing templates and recipes.  How to use the patch:\n Choose to generate the WCF implementation projects like you normally do. This means right clicking on the solution and choosing Add \u0026gt; WCF Implementation Projects. Enter the desired name for the service. A simple name will do, do not enter a fully qualified name here becuase you can choose a namespace in the next step. Screenshot In the next screen you supply a desired namespace. Remember that the namespace you enter here will be added to every project that is generated. Screenshot  [download#5#image]\n","date":"October 15, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/10/better-wssf-solution-structure/","summary":"I’ve done my share of work with the Web Service Software Factory modelling edition, but never have I liked the solution structure it generates for me. Or either the namespaces of the projects are wrong, or the paths became too long because of the fully qualified names I’d use. This time I reserved some time to tackle this once and for all. The result is an easy to apply patch for WSSF: Modelling Edition.","tags":null,"title":"Better WSSF solution structure"},{"categories":[".NET","API","C#","Viddler"],"contents":"Things are moving fast. Yesterday I released an early first version of Viddler.Net, a wrapper for the Viddle API. Today I was able to post an updated version to Codeplex, which seems more suitable for managing this project than my own blog. The updated version uses HTTP POST instead of GET and includes one extra implemented method to upload videos.\nFind the Codeplex project at http://www.codeplex.com/ViddlerDotNet\n","date":"August 22, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/08/viddlernet-on-codeplex/","summary":"Things are moving fast. Yesterday I released an early first version of Viddler.Net, a wrapper for the Viddle API. Today I was able to post an updated version to Codeplex, which seems more suitable for managing this project than my own blog. The updated version uses HTTP POST instead of GET and includes one extra implemented method to upload videos.\nFind the Codeplex project at http://www.codeplex.com/ViddlerDotNet","tags":[".NET","API","C#","Viddler"],"title":"Viddler.Net on Codeplex"},{"categories":[".NET","API","C#","Viddler"],"contents":"If you read my article in the Dutch .Net Magazine about Vista Media Center add-ins and you came looking on my blog for the Viddler.Net api, you just found it! If you don’t know what I’m talking about, please read on This is my first release of the Viddler.Net api, which is a wrapper for the Viddler api. The Viddler.Net api allows a .Net developer to make use of the videos on the Viddler website through code. At this stage not all methods are implemented, but they will be soon. In the download you’ll find the full source code of the api including the unit tests. To be able to run the unit tests you need to modify the app.config and put in your own username, password and api key. You can request you api key here.\nIf you want to use Viddler.Net in your own project, you need to add a Viddler.Net configuration section to your app.config or web.config. To do this you first need to declare the configuration section in the  section in top of the configuration file. Then you need to define the configuration section somewhere below the configSections section, but between the elements. You configuration file should look something like this:\n\n[download#4#image]\nNote that not all methods are currently implemented or working correctly. I’m working on getting them all to work, but I thought to release a version now, while I’m still improving it. The current status is represented by the following test results overview (click to enlarge):\n\nOn my todo-list is currently:\n  Implement all methods   Complete all unit tests   Change http method from GET to POST to allow more characters for some parameters   ","date":"August 20, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/08/first-release-of-viddlernet/","summary":"If you read my article in the Dutch .Net Magazine about Vista Media Center add-ins and you came looking on my blog for the Viddler.Net api, you just found it! If you don’t know what I’m talking about, please read on This is my first release of the Viddler.Net api, which is a wrapper for the Viddler api. The Viddler.Net api allows a .Net developer to make use of the videos on the Viddler website through code.","tags":[".NET","API","C#","Viddler"],"title":"First release of Viddler.Net"},{"categories":["BizTalk","Guide","Optimization"],"contents":"From MSDN:\n Welcome to the first edition of the Microsoft® BizTalk® Server Performance Optimizations Guide. We created this guide to provide in depth information for optimizing the performance of a BizTalk Server solution. Full end-to-end performance testing is frequently overlooked during enterprise application deployment. Knowing that Microsoft has built a scalable messaging infrastructure, many organizations that use BizTalk Server spend little or no time conducting performance testing of their own applications. BizTalk Server applications consist of many parts, which may include custom-built components as well as those provided by Microsoft. It is impossible for Microsoft to performance test every possible combination of these components. Therefore, fully and properly conducting a performance test of your application is a critical step of any deployment. The purpose of this guide is to consolidate and provide prescriptive guidance on the best practices and techniques that should be followed to optimize BizTalk Server performance.\n Read more about it or get it.\n","date":"July 10, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/microsoft-biztalk-server-performance-optimization-guide/","summary":"From MSDN:\n Welcome to the first edition of the Microsoft® BizTalk® Server Performance Optimizations Guide. We created this guide to provide in depth information for optimizing the performance of a BizTalk Server solution. Full end-to-end performance testing is frequently overlooked during enterprise application deployment. Knowing that Microsoft has built a scalable messaging infrastructure, many organizations that use BizTalk Server spend little or no time conducting performance testing of their own applications.","tags":["BizTalk","Guide","Optimization"],"title":"Microsoft BizTalk Server Performance Optimization Guide"},{"categories":["Gadget","Media Center","SideShow"],"contents":"From the Windows Experience Blog:\n The Windows SideShow Team has announced the availability of 4 BETA Windows SideShow Gadgets that let you control Windows Media Center from a Windows Sideshow device. You can sign-up via Microsoft Connect to gain access to Beta Test these new Windows SideShow Gadgets:\nhttp://connect.microsoft.com/InvitationUse.aspx?ProgramID=2380\u0026amp;SiteID=312\u0026amp;InvitationID=GPB-79MM-RFJ2\nHere is the breakdown of the 4 Windows Media Center BETA Windows SideShow Gadgets and what they do:\n Now Playing: View what is currently playing in Windows Media Center (includes playback controls) Pictures + Video: Browse your Photos and Videos folders Music: Browse your Music folder and play any song TV: Look at what is on TV via the Windows Media Center Guide, Schedule Recordings, and View Recordings (in a Thumbnail view)   ","date":"July 8, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/control-windows-media-center-with-new-windows-sideshow-beta-gadgets/","summary":"From the Windows Experience Blog:\n The Windows SideShow Team has announced the availability of 4 BETA Windows SideShow Gadgets that let you control Windows Media Center from a Windows Sideshow device. You can sign-up via Microsoft Connect to gain access to Beta Test these new Windows SideShow Gadgets:\nhttp://connect.microsoft.com/InvitationUse.aspx?ProgramID=2380\u0026amp;SiteID=312\u0026amp;InvitationID=GPB-79MM-RFJ2\nHere is the breakdown of the 4 Windows Media Center BETA Windows SideShow Gadgets and what they do:\n Now Playing: View what is currently playing in Windows Media Center (includes playback controls) Pictures + Video: Browse your Photos and Videos folders Music: Browse your Music folder and play any song TV: Look at what is on TV via the Windows Media Center Guide, Schedule Recordings, and View Recordings (in a Thumbnail view)   ","tags":["Gadget","Media Center","SideShow"],"title":"Control Windows Media Center with New Windows SideShow BETA Gadgets"},{"categories":["BizTalk","BizUnit","Unit Test","XML"],"contents":"   From CodePlex:\n BizUnit Designer is a GUI that allows rapid creation of BizUnit test cases which can be used for unit testing or system testing distributed applications. The easy to use drag and drop user interface has minimal learning curve which will get you up and running with test cases in a matter of minutes.\n I’ve used BizUnit on a couple of projects (even non-BizTalk projects) and I think it’s very useful. The only thing bothering me was that I always had to edit the XML files directly (although not difficult). This designer somewhat helps you with this. Unfortunately are all the test steps very different from each-other that building a generic designer can only help a little. The UI could use some tweaks to make it easier to use. Anyway I think it’s a great initiative, although not perfect.\nGet it here.\n","date":"July 4, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/bizunit-designer/","summary":"From CodePlex:\n BizUnit Designer is a GUI that allows rapid creation of BizUnit test cases which can be used for unit testing or system testing distributed applications. The easy to use drag and drop user interface has minimal learning curve which will get you up and running with test cases in a matter of minutes.\n I’ve used BizUnit on a couple of projects (even non-BizTalk projects) and I think it’s very useful.","tags":["BizTalk","BizUnit","Unit Test","XML"],"title":"BizUnit Designer"},{"categories":["BizTalk","Poster"],"contents":"Somebody at the product team has really started a rush to push out these nice looking posters. Here is a rather new one:\nBizTalk Server 2006 R2 Database Infrastructure Poster\nhttp://www.microsoft.com/downloads/details.aspx?familyid=24662FB5-622C-4E7E-9E83-505D1F664C4D\u0026amp;displaylang=en\nAnd as a service to those of you that haven’t seen anyone of these:\nBizTalk Server 2006 R2 Runtime Architecture Poster\nhttp://www.microsoft.com/downloads/details.aspx?familyid=8790E652-1DA5-4E80-88FE-B87606233DB4\u0026amp;displaylang=en\nBizTalk Server 2006 R2 Capabilities Poster\nhttp://www.microsoft.com/downloads/details.aspx?familyid=34F41573-C552-466F-B531-32CB09A57CDD\u0026amp;displaylang=en\nBizTalk Server 2006 R2 Scale-Out Configurations Poster\nhttp://www.microsoft.com/downloads/details.aspx?FamilyID=FF468298-64BE-4947-A086-F61584CAF995\u0026amp;displaylang=en\n","date":"July 2, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/more-biztalk-posters/","summary":"Somebody at the product team has really started a rush to push out these nice looking posters. Here is a rather new one:\nBizTalk Server 2006 R2 Database Infrastructure Poster\nhttp://www.microsoft.com/downloads/details.aspx?familyid=24662FB5-622C-4E7E-9E83-505D1F664C4D\u0026amp;displaylang=en\nAnd as a service to those of you that haven’t seen anyone of these:\nBizTalk Server 2006 R2 Runtime Architecture Poster\nhttp://www.microsoft.com/downloads/details.aspx?familyid=8790E652-1DA5-4E80-88FE-B87606233DB4\u0026amp;displaylang=en\nBizTalk Server 2006 R2 Capabilities Poster\nhttp://www.microsoft.com/downloads/details.aspx?familyid=34F41573-C552-466F-B531-32CB09A57CDD\u0026amp;displaylang=en\nBizTalk Server 2006 R2 Scale-Out Configurations Poster\nhttp://www.microsoft.com/downloads/details.aspx?FamilyID=FF468298-64BE-4947-A086-F61584CAF995\u0026amp;displaylang=en","tags":["BizTalk","Poster"],"title":"More BizTalk posters"},{"categories":["Book","Home Server","Microsoft"],"contents":"[](File URL)  in case you haven’t seen this yet, Microsoft has a rather interesting marketing campaign around Windows Home Server. One of the parts of the campaign is a book about Home Server which looks like it’s written for kids. The book explains what the magic \u0026lsquo;Server\u0026rsquo; in the house is all about.\nMicrosoft went so far with this campaign that it actually looks like you can buy the book from Amazon! Absolutely hilarious!\nIf you would like to know more about that weird ‘Server’ that suddenly appeared in your house and what it does, you should definitely read the book!\n","date":"July 2, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/86/","summary":"[](File URL)  in case you haven’t seen this yet, Microsoft has a rather interesting marketing campaign around Windows Home Server. One of the parts of the campaign is a book about Home Server which looks like it’s written for kids. The book explains what the magic \u0026lsquo;Server\u0026rsquo; in the house is all about.\nMicrosoft went so far with this campaign that it actually looks like you can buy the book from Amazon!","tags":["Book","Home Server","Microsoft"],"title":"Home Server campaign"},{"categories":["3.5","ASP.NET","Screencast"],"contents":"From the almighty Scott Hanselman:\n Released today are four new screencasts about the ASP.NET 3.5 Extensions by various members of the ASP.NET team. Every video is available in numerous formats, and note that this also includes re-encoded versions of my **Intro to MVC Screencast **in a pile of formats including an iPod/iTouch compatible format, as well as ones for the **Zune **and **PSP **and a utterly unwatchable 😉 40 meg 3GP one for 3G Phones.\n Continue reading here (includes links to the videos).\n","date":"July 2, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/84/","summary":"From the almighty Scott Hanselman:\n Released today are four new screencasts about the ASP.NET 3.5 Extensions by various members of the ASP.NET team. Every video is available in numerous formats, and note that this also includes re-encoded versions of my **Intro to MVC Screencast **in a pile of formats including an iPod/iTouch compatible format, as well as ones for the **Zune **and **PSP **and a utterly unwatchable 😉 40 meg 3GP one for 3G Phones.","tags":["3.5","ASP.NET","Screencast"],"title":"How-To: New ASP.NET 3.5 Extensions Video Screencasts"},{"categories":["BizTalk","Services","WCF"],"contents":"In this video, James Conard talks with John Shewchuk and Dennis Pilarinos about BizTalk Services.\nIn the simplest definition, BizTalk Services simplifies application connectivity by extending WCF and providing a set of hosted services. John and Dennis quickly explain BizTalk Services by discussing the challenges with building applications today. Dennis also shows four demos of BizTalk Services and then drops into Visual Studio along the way to show the programming model.\nCheck out the video [here](John Shewchuk and Dennis Pilarinos: BizTalk Services Explained).\n","date":"July 2, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/video-biztalk-services-explained/","summary":"In this video, James Conard talks with John Shewchuk and Dennis Pilarinos about BizTalk Services.\nIn the simplest definition, BizTalk Services simplifies application connectivity by extending WCF and providing a set of hosted services. John and Dennis quickly explain BizTalk Services by discussing the challenges with building applications today. Dennis also shows four demos of BizTalk Services and then drops into Visual Studio along the way to show the programming model.","tags":["BizTalk","Services","WCF"],"title":"Video: BizTalk Services Explained"},{"categories":["BizTalk","Extensions","WF","Workflow"],"contents":"Just released (oh well, a couple of months ago), the long awaited BizTalk Server 2006 extensions for Windows Workflow Foundation SDK. Use WF modeling and host workflows in BizTalk Server. Note the BTS messaging activities in the image.\nThe new BizTalk Server edition will most likely sport the Workflow Designer instead of the plain old Orchestration Designer. This probably results into something that looks a lot like what you get with the extentions. With the extentions you won’t have to choose between either product at the start of a project, but you could use both instead.\nNote that this release is not supported by Microsoft customer services and should be treated as an SDK sample. If you still want to use this on a project or just want to play with it, you can download it here.\n","date":"July 2, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/released-biztalk-server-2006-extentions-for-wf/","summary":"Just released (oh well, a couple of months ago), the long awaited BizTalk Server 2006 extensions for Windows Workflow Foundation SDK. Use WF modeling and host workflows in BizTalk Server. Note the BTS messaging activities in the image.\nThe new BizTalk Server edition will most likely sport the Workflow Designer instead of the plain old Orchestration Designer. This probably results into something that looks a lot like what you get with the extentions.","tags":["BizTalk","Extensions","WF","Workflow"],"title":"Released: BizTalk Server 2006 extentions for WF"},{"categories":["BizTalk","LoadGen","Microsoft","Performance"],"contents":" Microsoft LoadGen 2007 generates message transmission loads to run performance and stress tests for your Microsoft BizTalk Server applications, and provides performance counters to monitor the performance of the infrastructure running BizTalk Server.\nThis tool is intended for developers and IT professionals to simulate load on a BizTalk Server. Using this tool, you can simulate load to instrument performance and stress against a BizTalk deployment. In addition, this tool may also be extended by developers to simulate load for custom transports. This tool should be used in a test environment only, and should not be used in a production environment. This tool is provided “as-is” and is not supported.\n Get it here.\n","date":"July 2, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/microsoft-loadgen-2007/","summary":"Microsoft LoadGen 2007 generates message transmission loads to run performance and stress tests for your Microsoft BizTalk Server applications, and provides performance counters to monitor the performance of the infrastructure running BizTalk Server.\nThis tool is intended for developers and IT professionals to simulate load on a BizTalk Server. Using this tool, you can simulate load to instrument performance and stress against a BizTalk deployment. In addition, this tool may also be extended by developers to simulate load for custom transports.","tags":["BizTalk","LoadGen","Microsoft","Performance"],"title":"Microsoft LoadGen 2007"},{"categories":["BizTalk","Poster"],"contents":"From the source:\n This poster lists the BizTalk Server 2006 R2 capabilities bucketed in categories and is designed to provide both a high level and a detailed view of the capabilities and features that are included in the product. (When printed in full scale this poster size is: 35x 32)\n Download the poster here.\n","date":"July 2, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/biztalk-server-capabilities-poster/","summary":"From the source:\n This poster lists the BizTalk Server 2006 R2 capabilities bucketed in categories and is designed to provide both a high level and a detailed view of the capabilities and features that are included in the product. (When printed in full scale this poster size is: 35x 32)\n Download the poster here.","tags":["BizTalk","Poster"],"title":"BizTalk Server capabilities poster"},{"categories":["BizTalk","Excel","Pipeline","Spread","XML"],"contents":"If you’ve ever wanted or needed to parse Excel files using BizTalk, you can now. Some time ago FarPoint released a pipeline dissassembler component for BizTalk Server 2006 which is able to convert Excel files into XML. From their website:\n Spread for BizTalk Server 2006 provides a complete solution for integrating Microsoft Excel data seamlessly into your BizTalk applications.\nSpread includes a pipeline disassembler that parses Excel data (XLS, Excel 2007 XML, CSV, TXT) into XML, and a pipeline assembler that creates Excel (XLS, Excel 2007 XML) and PDF documents from XML data in BizTalk Applications.\n Read more about Spread, download a trial or obtain a license here.\n","date":"July 2, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/farpoint-spread-for-biztalk-server-2006/","summary":"If you’ve ever wanted or needed to parse Excel files using BizTalk, you can now. Some time ago FarPoint released a pipeline dissassembler component for BizTalk Server 2006 which is able to convert Excel files into XML. From their website:\n Spread for BizTalk Server 2006 provides a complete solution for integrating Microsoft Excel data seamlessly into your BizTalk applications.\nSpread includes a pipeline disassembler that parses Excel data (XLS, Excel 2007 XML, CSV, TXT) into XML, and a pipeline assembler that creates Excel (XLS, Excel 2007 XML) and PDF documents from XML data in BizTalk Applications.","tags":["BizTalk","Excel","Pipeline","Spread","XML"],"title":"FarPoint Spread for BizTalk Server 2006"},{"categories":["BizTalk","C#","DateTime","Mapper","Schema"],"contents":"Remember that situation where you needed to convert a string representation of a DateTime to a valid DataTime using the BizTalk mapper? No? Well, I do. The parsing of the string as a DateTime is not the real problem here. Once you know how the string is formatted it is simply writing a way to parse it, either using substrings or using the DateTime.Parse method. Once you have a DateTime though, you need to format it to be valid according to the XSD spec. That’s exactly where DateTimes and the BizTalk mapper can give you a headache. Especially when you’re dealing with different locales under which BizTalk is running this can be quite cumbersome. There is however a good way of converting a string to a valid datetime and I’ll show you how in the following code sample:\n// We\u0026rsquo;ll be using the W3cXsd2001class from the Metadata namespace using System.Runtime.Remoting.Metadata; // Parse a string as a DateTime. This could be a string coming // from the source message. DateTime myDateTime = DateTime.Parse(\u0026ldquo;07/01/2008\u0026rdquo;); // This method returns the current DateTime into a xs:DateTime string dateTimeString = W3cXsd2001.SoapDateTime.ToString( myDateTime );\nHappy coding ","date":"July 1, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/map-xsstring-to-xsdatetime/","summary":"Remember that situation where you needed to convert a string representation of a DateTime to a valid DataTime using the BizTalk mapper? No? Well, I do. The parsing of the string as a DateTime is not the real problem here. Once you know how the string is formatted it is simply writing a way to parse it, either using substrings or using the DateTime.Parse method. Once you have a DateTime though, you need to format it to be valid according to the XSD spec.","tags":["BizTalk","C#","DateTime","Mapper","Schema"],"title":"Map xs:string to xs:datetime"},{"categories":["BizTalk","R2","Video","WCF"],"contents":"Although the WCF adapter for BizTalk Server 2006 R2 has been released a while ago, I found that a coworker of mine had created a simple and short video explaining all the basics of using the WCF adapter. If you haven’t used the adapter before or just want to see how easy it is to use the adapter, go see the video here.\n","date":"July 1, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/first-look-at-wcf-adapter-for-biztalk-server-2006-r2/","summary":"Although the WCF adapter for BizTalk Server 2006 R2 has been released a while ago, I found that a coworker of mine had created a simple and short video explaining all the basics of using the WCF adapter. If you haven’t used the adapter before or just want to see how easy it is to use the adapter, go see the video here.","tags":["BizTalk","R2","Video","WCF"],"title":"First look at WCF Adapter for BizTalk Server 2006 R2"},{"categories":["Ajax","DHTML","Ext JS","Javascript"],"contents":"Although I rarely develop front-end applications, let alone web applications, during my day-to-day job, I’m still practicing the skill in my personal time. Before my interests in application integration started to arise I was very much intrigued by all what is currently known as web 2.0 and Ajax. In the time we would simply call it DHTML, but that term was superseded by the more catchy ones.\nSo if I see someting passing by that really looks cool and is built using simply Javascript and HTML I always take a quick look at it. This time I was following an e-mail thread on Ajax libraries until Ext JS was suggested. As I’d never heard of it, I went out and looked at the samples. And I must say I’m really impressed with the style, smoothness and functionality of the library. Now I only have to check out how to incorporate this with .Net.\nPlease do check out the samples at http://extjs.com/deploy/dev/examples/samples.html.\n","date":"July 1, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/07/ext-js/","summary":"Although I rarely develop front-end applications, let alone web applications, during my day-to-day job, I’m still practicing the skill in my personal time. Before my interests in application integration started to arise I was very much intrigued by all what is currently known as web 2.0 and Ajax. In the time we would simply call it DHTML, but that term was superseded by the more catchy ones.\nSo if I see someting passing by that really looks cool and is built using simply Javascript and HTML I always take a quick look at it.","tags":["Ajax","DHTML","Ext JS","Javascript"],"title":"Ext JS"},{"categories":["BizTalk","R3"],"contents":"Quote: “Once SQL Server 2008 (…) becomes generally available, we will follow with an updated version of BizTalk Server designed for the latest versions of Windows Server, the .NET Framework, Visual Studio, and SQL Server. This will mean that BizTalk Server customers will continue to take full advantage of the platform’s latest improvements including: scalability for mission-critical workloads, improved support for next-generation web and service oriented applications, improved virtualization support and better business insight through Office.”\nhttp://blogs.msdn.com/stevemar/archive/2008/04/23/biztalk-server-platform-updates.aspx\n","date":"April 23, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/04/biztalk-server-2006-r3-just-around-the-corner/","summary":"Quote: “Once SQL Server 2008 (…) becomes generally available, we will follow with an updated version of BizTalk Server designed for the latest versions of Windows Server, the .NET Framework, Visual Studio, and SQL Server. This will mean that BizTalk Server customers will continue to take full advantage of the platform’s latest improvements including: scalability for mission-critical workloads, improved support for next-generation web and service oriented applications, improved virtualization support and better business insight through Office.","tags":["BizTalk","R3"],"title":"BizTalk Server 2006 R3 just around the corner"},{"categories":["Guide Editor","Media Center"],"contents":"A lot of people are waiting for a new release of MCE Guide Editor which hopefully fixes the bug that the channel order gets mixed up again after a reboot. Somewhere in the comments of the old post I mentioned I thought I’d found the bug and it was just a matter of days until the fix could be released. I was testing the tool agains a simulated set-up with preconfigured UPC guide listings. Unfortunately things work completely different when using Digital Terrestrial (for instance with FloppyDTV) and my fix didn’t work at all on my real media center setup. This brought me back to square one. I now need to figure out the complete guide listings database structure to be able to figure out how to rearrage the channels. The problem is that the structure is pretty complex and not straightforward. This means I’m still struggling for a fix.\nIf there are people that know the structure of the media center database or are willing to help me figure it out, please reach out to me by leaving a comment or by dropping me a mail. I hope we can together figure this thing out and release a fix.\n","date":"March 16, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/03/status-update-on-mce-guide-editor/","summary":"A lot of people are waiting for a new release of MCE Guide Editor which hopefully fixes the bug that the channel order gets mixed up again after a reboot. Somewhere in the comments of the old post I mentioned I thought I’d found the bug and it was just a matter of days until the fix could be released. I was testing the tool agains a simulated set-up with preconfigured UPC guide listings.","tags":["Guide Editor","Media Center"],"title":"Status update on MCE Guide Editor"},{"categories":null,"contents":"IT-talent is an internship project which offers IT-talents an exclusive assignment with a prominent IT company. The goal is to create an unique experience and a solid basis for a successful career in IT. Check out www.it-talenten.nl (Dutch) for more information on this project.\nOne of the eight participating students is Jonas Butt, who’s doing his internship at Avanade Netherlands. During his internship he’ll try to answer the following research question:\nHow can Avanade promote the reuse of products (like code, patterns and domain knowledge) from similar projects within the same domain to reduce costs and shorten the run time?\nIf Jonas manages to make his blog the most interesting and entertaining of all eight he’ll be awarded the IT-talent of the year award. For more information please continue to read his blog.\n","date":"February 27, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/02/jonas-butt-the-new-it-talent/","summary":"IT-talent is an internship project which offers IT-talents an exclusive assignment with a prominent IT company. The goal is to create an unique experience and a solid basis for a successful career in IT. Check out www.it-talenten.nl (Dutch) for more information on this project.\nOne of the eight participating students is Jonas Butt, who’s doing his internship at Avanade Netherlands. During his internship he’ll try to answer the following research question:","tags":null,"title":"Jonas Butt, the new IT-talent?"},{"categories":null,"contents":"For about 5 months now I’m running with a couple of friends. We started out with a small route in the woods, but that got a little too dark in the winter. One time I was running right behind one of my fellow runners and I couln’t see anything but his white shoes. Suddenly I noticed the path was way to our right and we were standing somewhere in the middle of some schrubs. We then decided it was time for a new route. We found that route near the woods we used to run. Since then we expanded it to be around 7 kilometers in length. Our last record is about 41 minutes and today we’ll try to beat that. Below an image of the route.\n ","date":"February 11, 2008","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2008/02/63/","summary":"For about 5 months now I’m running with a couple of friends. We started out with a small route in the woods, but that got a little too dark in the winter. One time I was running right behind one of my fellow runners and I couln’t see anything but his white shoes. Suddenly I noticed the path was way to our right and we were standing somewhere in the middle of some schrubs.","tags":null,"title":"Running"},{"categories":null,"contents":"DevDays 2007…I was there, but were you? For those of you living in the Netherlands, Microsoft held the 2007 edition of DevDays and off course Avanade was well represented. On the main plaza you could find our stand where we were running an XNA demo on two giant plasma screens. One was running on a laptop and the other live on a Xbox360. Okay, Avanade doesn’t actually do projects using XNA, but we didn’t mind. In a part of our spare time Eric van Feggelen (http://www.fegelein.com) and I developed sort of a tech demo to show off the power of XNA. Both with little experience in 3D game development (Eric some more than I) we put together a scene rendering with water, clouds, an island and off course our logo.\nI’ve put the demo online for you to download. You need at least a videocard that support shader language 2.0 and DirectX9 to run this.\n[download#2#image]\nMost of the time I spend on our stand showing off our XNA demo, but I also was able to attend some sessions. Most of the DevDays were about Silverlight and Visual Studio Orca’s, and oh boy, some great stuff is ahead of us. I’m definitely going to play a little with Silverlight and LINQ to SQL, but also with XNA.\nHere you can see me in action on the stand ","date":"June 18, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/06/devdays-2007-were-you-there/","summary":"DevDays 2007…I was there, but were you? For those of you living in the Netherlands, Microsoft held the 2007 edition of DevDays and off course Avanade was well represented. On the main plaza you could find our stand where we were running an XNA demo on two giant plasma screens. One was running on a laptop and the other live on a Xbox360. Okay, Avanade doesn’t actually do projects using XNA, but we didn’t mind.","tags":null,"title":"DevDays 2007, were you there?"},{"categories":null,"contents":"Today I released the first edition of MCE Guide Editor. I created this tool because of the very long list of channels I got since I use satellite tv. Reordering the channels is a real pain in the ass if you use the Media Center user interface. Here’s where MCE Guide Editor comes in…\nMCE Guide Editor allows you to change the order of channels of your Media Center setup in an easy way, using drag and drop. This tool also allow you to exclude channels from appearing in Media Center, thus making the list of channels smaller.\nNote: use this tool at your own risk. MCE Guide Editor has been tested on the Dutch version of Vista Media Center.\nAny feedback is really appreciated.\nSo, what are you waiting for? Download it now!\n[download#1#image]\n","date":"May 24, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/05/first-release-of-mce-guide-editor/","summary":"Today I released the first edition of MCE Guide Editor. I created this tool because of the very long list of channels I got since I use satellite tv. Reordering the channels is a real pain in the ass if you use the Media Center user interface. Here’s where MCE Guide Editor comes in…\nMCE Guide Editor allows you to change the order of channels of your Media Center setup in an easy way, using drag and drop.","tags":null,"title":"First release of MCE Guide Editor"},{"categories":null,"contents":"Today I found out that my article on BAM for the Dutch .Net Magazine of december 2006 is published online. It’s an introduction to BAM and I wrote it because I think BAM is far underused at the moment.\nIf you understand Dutch you might want to check it out here.\nEx-collegue Dick Dijkstra also wrote an article for the same edition of the .Net Magazine. His article is about the new and improved error handling methods in BizTalk Server 2006. You can find his article here (also Dutch).\n","date":"February 9, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/02/net-magazine-article-published-online/","summary":"Today I found out that my article on BAM for the Dutch .Net Magazine of december 2006 is published online. It’s an introduction to BAM and I wrote it because I think BAM is far underused at the moment.\nIf you understand Dutch you might want to check it out here.\nEx-collegue Dick Dijkstra also wrote an article for the same edition of the .Net Magazine. His article is about the new and improved error handling methods in BizTalk Server 2006.","tags":null,"title":".Net Magazine article published online"},{"categories":null,"contents":"Today I passed the 70-235 exam, required for earning the MCTS BizTalk Server 2006 certification. About 20% of the questions was related to the Business Rule Engine (BRE) and another 15% to Business Activity Monitoring (BAM). The other questions were all general BizTalk questions, including some questions on Role Links. I found the exam a little difficult, mainly because I haven’t worked with the BRE that much and also haven’t used Role Links. Luckily I took the BizTalk 2006 Deep Dive course by QuickLearn, which gave me the basic knowledge on these subjects.\n![MCTS BizTalk Server 2006](images/msts-biztalk.gif) ","date":"January 29, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/mcts-biztalk-server-2006/","summary":"Today I passed the 70-235 exam, required for earning the MCTS BizTalk Server 2006 certification. About 20% of the questions was related to the Business Rule Engine (BRE) and another 15% to Business Activity Monitoring (BAM). The other questions were all general BizTalk questions, including some questions on Role Links. I found the exam a little difficult, mainly because I haven’t worked with the BRE that much and also haven’t used Role Links.","tags":null,"title":"MCTS BizTalk Server 2006"},{"categories":null,"contents":"Jolly, they got me! Dennis just tagged me. At first I had no clue what it meant, but it seems a game of tag, and now I’m it. This means I have to write five things not much people know about me. So here it goes  My girlfriend is Tamara Bos and we’re together for over 7.5 years now. She’s my first and only true love and we are very happy with each other, especially now we are living together in Almere since last october. I wanted to be a comic writer. You could always find me draw, wherever I was. I got a book on how to draw comics and tried every technique in it. Since I got a real computer I don’t practice drawing anymore. These days I express myself when I design websites on the computer instead. I was very active in the mod tracking scene under various nick names, including DJ Schnibble and Snith. It started out as a joke when I wanted to cover the horrific song ‘Ik zing dit lied voor jou alleen’ by Jantje Smit. After that I covered ‘7PM’ by ATB and finally created about twenty tracks of various styles. I’ve made two short movies in a school contest and won the awards for best movie and best male and best music. The first movie was about a hippie who killed people because he needed meatloaf for in his soup. I created the complete sound effects track in mod tracker. Because I only had a video recorder I needed to dub the whole track to the tape at once. The second movie was called Split Second and it was about a detective who’s girlfriend got kidnapped. This was the first movie at the school contest to be edited completely on the computer. We added a lot of special effects like explosions, gun fire and sound effects. I played soccer for almost my whole life. At the age of five I wanted to play soccer, but was too young. Because they had one kid short I was added to the team at Unicum. My position on the field was left-back, but sometimes I played left-center. This means I didn’t score too often, but I didn’t care. For years I played in the highest team, but before I reached the age I could play for the first team I quit soccer. Mainly because I disliked the morale of a couple of players, but also because I needed time for my education. After my time on the field I played indoor soccer for a couple of years with some friends. When most of them quit I wanted to return to field soccer, but during the second training I made a wrong move and tore the meniscus of my right knee. I don’t play since then and won’t play it anymore. I’ve moved to other sports instead, like tennis and spinning.  Phiew, that’s it. Now I pass it along to Mark, Ronald, Olav, Tamara and Jeroen\nGood luck, you’ve just been tagged!\n","date":"January 16, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/playing-blog-tag/","summary":"Jolly, they got me! Dennis just tagged me. At first I had no clue what it meant, but it seems a game of tag, and now I’m it. This means I have to write five things not much people know about me. So here it goes  My girlfriend is Tamara Bos and we’re together for over 7.5 years now. She’s my first and only true love and we are very happy with each other, especially now we are living together in Almere since last october.","tags":null,"title":"Playing Blog-Tag"},{"categories":null,"contents":"I would like to share one interesting tool I came across. This is a tool for Viewing BizTalk Assemblies Deployed on BizTalk Server. Not only you can view the deployed assemblies but can also view the contents of the assembly by double clicking on assembly. Also you can dive deeper by double clicking the individual BizTalk Artifact where you can view more detailed info. Say if, you double click a schema of an assembly you will see the schema of that particular message.\nTo install this utility on your BizTalk server, go to Start -\u0026gt; Run and enter the command below:\nRegsvr32 “C:Program FilesMicrosoft BizTalk Server 2004Developer ToolsBtsAsmExt.dll”\nYou will get a popup saying the component has been registered. Now open an explorer window and you will be able to see a new folder called BizTalk Server Assemblies under the My Computer node. Double click it and you will see a list of currently deployed assemblies. Double click one assembly and you’ll find all the BizTalk artifacts in that assembly. Double click one artifact and you will see its details.\n","date":"January 5, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/biztalk-shell-extension/","summary":"I would like to share one interesting tool I came across. This is a tool for Viewing BizTalk Assemblies Deployed on BizTalk Server. Not only you can view the deployed assemblies but can also view the contents of the assembly by double clicking on assembly. Also you can dive deeper by double clicking the individual BizTalk Artifact where you can view more detailed info. Say if, you double click a schema of an assembly you will see the schema of that particular message.","tags":null,"title":"BizTalk shell extension"},{"categories":null,"contents":"For beginners BizTalk can be really difficult to learn. They don’t know how to perform certain tasks and are stunned by a lot of (for them) cryptical warnings and errors. Luckily there’s the BizTalk Troubleshooting Guide which covers most (if not all) of the tasks, messages, tips, trics, know-hows and what else. Even for an experienced BizTalk enthousiast like me it contains a lot of interesting stuff. Use it as your BizTalk bible.\n","date":"January 5, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/biztalk-troubleshooting-guide/","summary":"For beginners BizTalk can be really difficult to learn. They don’t know how to perform certain tasks and are stunned by a lot of (for them) cryptical warnings and errors. Luckily there’s the BizTalk Troubleshooting Guide which covers most (if not all) of the tasks, messages, tips, trics, know-hows and what else. Even for an experienced BizTalk enthousiast like me it contains a lot of interesting stuff. Use it as your BizTalk bible.","tags":null,"title":"BizTalk Troubleshooting Guide"},{"categories":null,"contents":"Sometimes the requirement for your BizTalk solution is to receive a flat file (read: not xml) in your orchestration an do something with the data. An example could be receiving a PDF file and extracting some portions of data out of it. Some BizTalk developers already know that you can receive whatever file without treating it as XML by using System.Xml.XmlDocument as its message type (sounds silly doesn’t it?). After you’ve received the message you can’t access it as you normally do because it’s still a byte stream. Charles Young dives into this subject and explains how you can access the data that is contained in such messages. Thanks Charles!\n","date":"January 5, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/accessing-flat-file-content-in-orchestration/","summary":"Sometimes the requirement for your BizTalk solution is to receive a flat file (read: not xml) in your orchestration an do something with the data. An example could be receiving a PDF file and extracting some portions of data out of it. Some BizTalk developers already know that you can receive whatever file without treating it as XML by using System.Xml.XmlDocument as its message type (sounds silly doesn’t it?). After you’ve received the message you can’t access it as you normally do because it’s still a byte stream.","tags":null,"title":"Accessing flat file content in orchestration"},{"categories":null,"contents":"Maybe the simplest way to store configuration data for your BizTalk solution is to use the BTSNTSvc.exe.config file and the System.Configuration namespace to access that data. Most of the time I’m using this method on projects, but it introduces problems in BizTalk farms because you need to keep the configuration in sync. Another way would be to use a database, but that still requires a connection string to be present somewhere (again the BTSNTSvc.exe.config file?)\nJon Flanders provided a great new way to store configuration data: the SSO database. The first time I heard about it I thought it was very complex but after reading his post on the matter it seems rather simple. Using this method you get automatic distributed configuration plus automatic encryption! He provides a sample project with a configuration tool to edit the configuration and an orchestration to try it out. This is definitely the way I’m going to store configuration data for any future BizTalk projects.\n","date":"January 5, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/storing-configuration-inside-sso-database/","summary":"Maybe the simplest way to store configuration data for your BizTalk solution is to use the BTSNTSvc.exe.config file and the System.Configuration namespace to access that data. Most of the time I’m using this method on projects, but it introduces problems in BizTalk farms because you need to keep the configuration in sync. Another way would be to use a database, but that still requires a connection string to be present somewhere (again the BTSNTSvc.","tags":null,"title":"Storing configuration inside SSO database"},{"categories":null,"contents":"Mike McKeown has a great blog where he elaborates on BizTalk Adapter development. He has some nice tutorials, howto’s and whitepapers listed on his blog. Some time ago he released a BizTalk Adapter developent whitepaper regarding transactional adapters and adapter base classes. You should definetely read this if you’re involved in developing new adapters. Also don’t forget to read his other material.\n","date":"January 5, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/biztalk-adapter-whitepaper/","summary":"Mike McKeown has a great blog where he elaborates on BizTalk Adapter development. He has some nice tutorials, howto’s and whitepapers listed on his blog. Some time ago he released a BizTalk Adapter developent whitepaper regarding transactional adapters and adapter base classes. You should definetely read this if you’re involved in developing new adapters. Also don’t forget to read his other material.","tags":null,"title":"BizTalk Adapter whitepaper"},{"categories":null,"contents":"Tomas Restrepo wrote a really useful framework to test pipelines and pipeline components. Some time ago he released the first version of his framework and posted a couple of howto’s to get you started. It’s definitely worth stopping by his blog.\n","date":"January 5, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/pipeline-testing-framework-for-bts06/","summary":"Tomas Restrepo wrote a really useful framework to test pipelines and pipeline components. Some time ago he released the first version of his framework and posted a couple of howto’s to get you started. It’s definitely worth stopping by his blog.","tags":null,"title":"Pipeline Testing Framework for BTS06"},{"categories":null,"contents":"Check out this great post by Richard Seroter on using the BAM API to collect BAM data inside a loop, creating a hierarchy of activities. Not doing too much with the BAM API I found it a great way to understand it’s usage and flexibility.\n","date":"January 5, 2007","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2007/01/using-bam-api-to-create-related-activities/","summary":"Check out this great post by Richard Seroter on using the BAM API to collect BAM data inside a loop, creating a hierarchy of activities. Not doing too much with the BAM API I found it a great way to understand it’s usage and flexibility.","tags":null,"title":"Using BAM API to create related activities"},{"categories":null,"contents":"Are you tired of dealing with the drama regarding adding an existing project from web in Visual Studio? If so read on, because if you follow these steps tightly you’re ready to go in a minute, or … well, faster then figuring this one out yourself  Open your solution in Visual Studio and choose Add \u0026gt; Existing Project From Web Type the url to your site, e.g. http://localhost/YourSite This is the important part: in the open file dialog, instead of browsing to the project file, type the full url to your project file, e.g. http://localhost/YourSite/YourSite.csproj Visual Studio will tell you it was unable to match the url to the path. Now browse to the directory that contains the project file and select it.  As if magic, Visual Studio suddenly adds your project to the soltion. I hope this helps you not to waste hours to figure it out or even let you create a new project file (I dit that most of the time, go figure!).\n","date":"November 18, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/11/add-existing-project-from-web-drama/","summary":"Are you tired of dealing with the drama regarding adding an existing project from web in Visual Studio? If so read on, because if you follow these steps tightly you’re ready to go in a minute, or … well, faster then figuring this one out yourself  Open your solution in Visual Studio and choose Add \u0026gt; Existing Project From Web Type the url to your site, e.g. http://localhost/YourSite This is the important part: in the open file dialog, instead of browsing to the project file, type the full url to your project file, e.","tags":null,"title":"Add existing project from web drama"},{"categories":null,"contents":"Aaah! I’ve read some very good news today. For some time now, I’m looking into developing plug-ins for XP Media Center, but I dislike the way it works. It looks like with Vista all my dreams will come true!\nFor XP one could develop plug-ins in the form of simple HTML pages, so it would always look as if the plug-in was bolted onto the side. Vista, in return, makes use of the eXtensible Markup Language defined with Windows Presentation Foundation. This enables the developer to create plug-ins that would seamlessly integrate with the product, using all of the same cool graphic effects!\n\n \nThe upcoming week I’ll prepare my Media Center machine (which also acts as webserver for this blog) to upgrade to Vista Media Center. I’ll post my findings here.\nRead more on Vista Media Center here.\n","date":"March 13, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/03/developing-for-vista-media-center/","summary":"Aaah! I’ve read some very good news today. For some time now, I’m looking into developing plug-ins for XP Media Center, but I dislike the way it works. It looks like with Vista all my dreams will come true!\nFor XP one could develop plug-ins in the form of simple HTML pages, so it would always look as if the plug-in was bolted onto the side. Vista, in return, makes use of the eXtensible Markup Language defined with Windows Presentation Foundation.","tags":null,"title":"Developing for Vista Media Center"},{"categories":null,"contents":"Almost every BizTalk artifact is beautifully documentable, especially using the BizTalk Documenter. One thing that’s always hard to document are the maps. Finally someone came up with a solution and that someone is Steve Hart.\nThe HTML Generator Stylesheet for BizTalk 2004 Maps is an XSLT which transforms the data of a map into viewable HTML. Although the approach is a good one, I’m not really sure about the added value. I don’t think the rendered HTML pages are very readable as there’s a lot of textual information on them. I think it’ll always be difficult to document a map, but maybe if it is presented in a more graphical and readable way it’s more useful. I’ll just wait for the next version.\n","date":"March 3, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/03/html-generator-stylesheet-for-biztalk-2004-maps/","summary":"Almost every BizTalk artifact is beautifully documentable, especially using the BizTalk Documenter. One thing that’s always hard to document are the maps. Finally someone came up with a solution and that someone is Steve Hart.\nThe HTML Generator Stylesheet for BizTalk 2004 Maps is an XSLT which transforms the data of a map into viewable HTML. Although the approach is a good one, I’m not really sure about the added value.","tags":null,"title":"HTML Generator Stylesheet for BizTalk 2004 Maps"},{"categories":null,"contents":"hlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; /\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; \u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-tab-count: 1″\u0026gt; \u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:key\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; name\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;NumberKey\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; match\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/[local-name()=’top’ and namespace-uri()=’http://biztalk/Conversion.schemas’]/[local-name()=’row’ and namespace-uri()=”]\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; \u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; use\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;KeyValue\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-tab-count: 1″\u0026gt; \u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:template\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; match\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPA\nN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;ns0:Rows\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:for-each\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; select\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/[local-name()=’top’ and namespace-uri()=’http://biztalk/Conversion.schemas’]/[local-name()=’row’ and namespace-uri()=” and generate-id(.) = generate-id(key(‘NumberKey’, KeyValue)[1])]\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:variable\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; name\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;current_Number\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; select\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;KeyValue\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;Data\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;keyValue\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026amp;nb\nsp; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:value-of\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; select\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;$current_Number\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;keyValue\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:for-each\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; select\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;//row[KeyValue=$current_Number]\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;Part\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;PartID\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-\nlanguage: EN-US”\u0026gt;xsl:value-of\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; select\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;nr_data\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;PartID\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;Part\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:for-each\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;Data\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:for-each\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;n\ns0:Rows\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:template\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;/\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:stylesheet\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026raquo;\u0026lt;SPAN lang=NL style=”FONT-SIZE: 8pt; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; Explanation: \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026laquo;/SPAN\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: maroon; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;xsl:key\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; name\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;NumberKey\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; match\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/[local-name()=’top’ and namespace-uri()=’http://biztalk/Conversion.schemas’]/[local-name()=’row’ and namespace-uri()=”]\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; \u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; use\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;=”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;KeyValue\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;”\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: red; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;/\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;FONT face=”Times New Roman” color=#000000 size=3\u0026gt;This creates the key. The name of the key is specified by the name attribute. The match attribute specifies the elements to be selected by the key. The use attribute specifies the element to use as the key value. \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;FONT face=”Times New Roman” color=#000000 size=3\u0026gt;  \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;key(‘NumberKey’, KeyValue) \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;FONT face=”Times New Roman” color=#000000 size=3\u0026amp;gt\n;This gets all the elements that have the key value. The first parameter of this function is the name of the key. The second parameter is the lookup value. Note that this function returns a node set and therefor we select the first element in the example XSLT (\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;key(‘NumberKey’, KeyValue)[1]).”\n","date":"March 3, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/03/increase-xslt-performance-by-using-xlskey/","summary":"hlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; /\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt; \u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-tab-count: 1″\u0026gt; \u0026lt;o:p\u0026gt;\u0026lt;/o:p\u0026gt; \u0026lt;P class=MsoNormal style=”MARGIN: 0in 0in 0pt; mso-layout-grid-align: none”\u0026gt;\u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: black; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.0pt; mso-highlight: white; mso-ansi-language: EN-US”\u0026gt;\u0026lt;SPAN style=”mso-spacerun: yes”\u0026gt; \u0026lt;SPAN style=”FONT-SIZE: 8pt; BACKGROUND: white; COLOR: blue; FONT-FAMILY: ‘Courier New\u0026rsquo;; mso-bidi-font-size: 12.","tags":null,"title":"Increase XSLT performance by using xls:key"},{"categories":null,"contents":"This March the DevDays are coming to Amsterdam and I will be there to speak on BizTalk Server 2006 together with collegae Matt Joe, who is flown in from Seattle. I will be doing some demos involving BAM and in-order processing.\nMatt will also be accompanying Dennis Mulder in a very promising talk on Windows Workflow Foundation.\nLast but not least my manager Edwin Jongsma will enlighten everyone on the subject of Software Factories (Domain Specific Languages).\nThe Agenda for the DevDays looks as follows:\n 7 March: Dennis Mulder and Matt Joe on Windows Workflow Foundation 7 March: Edwin Jongsma on Software Factories 8 March: I (Sander Schutten) and Matt Joe on BizTalk Server 2006  I hope to see you there!\nSee the full agenda\nSee all the profiles\n","date":"February 22, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/02/devdays-7-8-march/","summary":"This March the DevDays are coming to Amsterdam and I will be there to speak on BizTalk Server 2006 together with collegae Matt Joe, who is flown in from Seattle. I will be doing some demos involving BAM and in-order processing.\nMatt will also be accompanying Dennis Mulder in a very promising talk on Windows Workflow Foundation.\nLast but not least my manager Edwin Jongsma will enlighten everyone on the subject of Software Factories (Domain Specific Languages).","tags":null,"title":"DevDays 7 \u0026amp; 8 March"},{"categories":null,"contents":"The BizTalk load generation utility, originally released by Microsoft several months ago, was quickly removed from their downloads page for enhancement. The enhanced version is now available for download here.\nThe interesting part is that this tool works with the Performance Tester Tool of Larry Beck (see post below).\n","date":"February 13, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/02/biztalk-load-generation-utility-reloaded/","summary":"The BizTalk load generation utility, originally released by Microsoft several months ago, was quickly removed from their downloads page for enhancement. The enhanced version is now available for download here.\nThe interesting part is that this tool works with the Performance Tester Tool of Larry Beck (see post below).","tags":null,"title":"BizTalk Load Generation Utility reloaded"},{"categories":null,"contents":"Better late then never, but about a month ago Larry Beck released the completed version of the BizTalk Performance Tester (BTSPerfTester). This application is intended to provide developers with an easily implemented and predictable method of determining the maximum sustainable throughput of their BizTalk solutions.\nYou can get it from his blog here.\n","date":"February 13, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/02/biztalk-performance-tester-released/","summary":"Better late then never, but about a month ago Larry Beck released the completed version of the BizTalk Performance Tester (BTSPerfTester). This application is intended to provide developers with an easily implemented and predictable method of determining the maximum sustainable throughput of their BizTalk solutions.\nYou can get it from his blog here.","tags":null,"title":"BizTalk Performance Tester released"},{"categories":null,"contents":"When I turned on the feature to output an XML documentation file when building my project I’m confronted with a load of warnings that the XML documentation is missing for some method. While it’s nice to see these warnings I didn’t want to see them anymore without lowering the warning level. So I searched the net and found a way to suppress these warnings:\n Go to the properties of your project. Go to Configuration Properties | Build Enter the number 1591 in the field labelled ‘Suppress Specific Warnings‘  I’m still looking for a complete table featuring all the warnings and their code so I can turn off other warnings when I get them.\n","date":"January 11, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/01/suppress-xml-documentation-warnings-for-a-project/","summary":"When I turned on the feature to output an XML documentation file when building my project I’m confronted with a load of warnings that the XML documentation is missing for some method. While it’s nice to see these warnings I didn’t want to see them anymore without lowering the warning level. So I searched the net and found a way to suppress these warnings:\n Go to the properties of your project.","tags":null,"title":"Suppress XML documentation warnings for a project"},{"categories":null,"contents":"For a BizTalk solution I needed to write some custom XSLT. In the XSLT I needed to determine the node type and according to the type execute a specific piece of XSLT. Unfortunately it’s not very easy to get the node type in XSLT. It took me a while to find this post which explains a solution for this. Maybe it could help you out.\nhttp://www.stylusstudio.com/xsllist/200312/post00260.html\n","date":"January 9, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/01/identify-node-type-in-xslt/","summary":"For a BizTalk solution I needed to write some custom XSLT. In the XSLT I needed to determine the node type and according to the type execute a specific piece of XSLT. Unfortunately it’s not very easy to get the node type in XSLT. It took me a while to find this post which explains a solution for this. Maybe it could help you out.\nhttp://www.stylusstudio.com/xsllist/200312/post00260.html","tags":null,"title":"Identify node type in XSLT"},{"categories":null,"contents":"From this place I would like to wish both readers of this blog a happy new year. My target for 2006 is to grow this blog and hopefully more people will read it.\n","date":"January 2, 2006","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2006/01/happy-new-year/","summary":"From this place I would like to wish both readers of this blog a happy new year. My target for 2006 is to grow this blog and hopefully more people will read it.","tags":null,"title":"Happy new year!"},{"categories":null,"contents":"That BizTalk compiles your XmlSchema’s into an assembly is great, but wouldn’t it be greater if you could reuse those schema’s in your code? No more hassle of different versions of your schema and your schema’s always at your fingertips because they are in the GAC. Well…it took me a while to figure that it’s actually really simple to do.\nTo load a schema from an external assembly just instantiate the class which describes your schema. This will be an instance with base type XmlSchemaWithNone. The instance has a property Schema which holds the XmlSchema. If you want to modify the schema I recommend using the CreateResolvedSchema() method on the instance you’ve just created because if you edit the Schema property directly, the schema will be altered and remain in memory until you restart your BizTalk group.\nIt’s allso possible to load the schema using reflection. This can be useful if you want to use a schema inside a custom pipeline component. Do this as followed:\n// Load the schema assembly Assembly assembly = Assembly.Load(schemaWithNone.AssemblyName); // Get the type of the xml schema we need Type type = assembly.GetType(schemaWithNone.DocSpecName); // Get schema property PropertyInfo schemaInfo = type.GetProperty(\u0026ldquo;Schema\u0026rdquo;); // Create instance of the schema Object instance = assembly.CreateInstance(type.FullName); // Get the XmlSchema XmlSchema xmlSchema = (XmlSchema)schemaInfo.GetValue(instance, null);\n","date":"December 7, 2005","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2005/12/load-xmlschemas-from-biztalk-assembly/","summary":"That BizTalk compiles your XmlSchema’s into an assembly is great, but wouldn’t it be greater if you could reuse those schema’s in your code? No more hassle of different versions of your schema and your schema’s always at your fingertips because they are in the GAC. Well…it took me a while to figure that it’s actually really simple to do.\nTo load a schema from an external assembly just instantiate the class which describes your schema.","tags":null,"title":"Load XmlSchema\u0026#039;s from BizTalk assembly"},{"categories":null,"contents":"As per monday October 7th Microsoft released BizTalk Server 2006 CTM. This release is only available for users with a MSDN or TechNet account. The CTM release of BizTalk Server 2006 is fully compatible with Visual Studio 2005 and SQL Server 2005. I just can smell the RTM version coming very soon.\n","date":"November 10, 2005","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2005/11/biztalk-server-2006-ctm-released/","summary":"As per monday October 7th Microsoft released BizTalk Server 2006 CTM. This release is only available for users with a MSDN or TechNet account. The CTM release of BizTalk Server 2006 is fully compatible with Visual Studio 2005 and SQL Server 2005. I just can smell the RTM version coming very soon.","tags":null,"title":"BizTalk Server 2006 CTM Released"},{"categories":null,"contents":"Just recently I was looking for some default message properties and how to read and write them inside a custom pipeline component. While searching I stumbled over a great post listing all the default message properties and how to read them.\nIf you want to access the properties in your custom pipeline component, you have to get the IBaseMessageContext object from the IBaseContext and use the Read method to get a value or the Write method to substitute a value with your own.\nFor example:\npublic IBaseMessage Execute(IPipelineContext pContext, IBaseMessage pInMsg)\n{\nIBaseMessageContext context = pInMsg.Context;\nstring value = context.Read(property, namespace).ToString();\ncontext.Write(property, namespace, value);\n}\nTo make your life a little easier, here’s the full list of properties:\nReceive pipeline properties:\n ******Property****Namespace**1 ReceivedFileNamehttp://schemas.microsoft.com/BizTalk/2003/file-properties2 InboundTransportLocationhttp://schemas.microsoft.com/BizTalk/2003/system-properties3 InterchangeIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties4 ReceivePortIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties5 ReceivePortNamehttp://schemas.microsoft.com/BizTalk/2003/system-properties6 WasSolicitResponsehttp://schemas.microsoft.com/BizTalk/2003/system-properties7 AuthenticationRequiredOnReceivePorthttp://schemas.microsoft.com/BizTalk/2003/system-properties8 InboundTransportTypehttp://schemas.microsoft.com/BizTalk/2003/system-properties9 LRPMsgBodyTrackinghttp://schemas.microsoft.com/BizTalk/2003/system-properties10 MessageExchangePatternhttp://schemas.microsoft.com/BizTalk/2003/system-properties11 PortNamehttp://schemas.microsoft.com/BizTalk/2003/messagetracking-properties12 ReceivePipelineIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties13 MessageTypehttp://schemas.microsoft.com/BizTalk/2003/system-properties14 SchemaStrongName[http://schemas.microsoft.com/BizTalk/2003/system-properties](http://schemas.microsoft.com/BizTalk/2003/system-properties)Send pipeling properties: ******Property****Namespace**1 CopyModehttp://schemas.microsoft.com/BizTalk/2003/file-properties2 LTPMsgBodyTrackinghttp://schemas.microsoft.com/BizTalk/2003/system-properties3 ReceivedFileNamehttp://schemas.microsoft.com/BizTalk/2003/file-properties4 SPIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties5 ActualRetryCounthttp://schemas.microsoft.com/BizTalk/2003/system-properties6 FileNamehttp://schemas.microsoft.com/BizTalk/2003/file-properties7 PartyNamehttp://schemas.microsoft.com/BizTalk/2003/messagetracking-properties8 ReceivePortNamehttp://schemas.microsoft.com/BizTalk/2003/system-properties9 WasSolicitResponsehttp://schemas.microsoft.com/BizTalk/2003/system-properties10 AllowCacheOnWritehttp://schemas.microsoft.com/BizTalk/2003/file-properties11 RetryIntervalhttp://schemas.microsoft.com/BizTalk/2003/system-properties12 OutboundTransportCLSIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties13 SPNamehttp://schemas.microsoft.com/BizTalk/2003/system-properties14 InboundTransportLocationhttp://schemas.microsoft.com/BizTalk/2003/system-properties15 InterchangeIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties16 ReceivePortIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties17 SPTransportIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties18 TransmitPipelineIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties19 AuthenticationRequiredOnReceivePorthttp://schemas.microsoft.com/BizTalk/2003/system-properties20 InboundTransportTypehttp://schemas.microsoft.com/BizTalk/2003/system-properties21 LRPMsgBodyTrackinghttp://schemas.microsoft.com/BizTalk/2003/system-properties22 MessageExchangePatternhttp://schemas.microsoft.com/BizTalk/2003/system-properties23 OutboundTransportLocationhttp://schemas.microsoft.com/BizTalk/2003/system-properties24 PortNamehttp://schemas.microsoft.com/BizTalk/2003/messagetracking-properties25 ReceivePipelineIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties26 SourcePartyIDhttp://schemas.microsoft.com/BizTalk/2003/system-properties27 MessageTypehttp://schemas.microsoft.com/BizTalk/2003/system-properties28 OutboundTransportTypehttp://schemas.microsoft.com/BizTalk/2003/system-properties29 PartNameshttp://schemas.microsoft.com/BizTalk/2003/messageagent-properties30 RetryCounthttp://schemas.microsoft.com/BizTalk/2003/system-properties31 SchemaStrongNamehttp://schemas.microsoft.com/BizTalk/2003/system-properties ","date":"November 10, 2005","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2005/11/access-message-properties-inside-custom-pipeline-component/","summary":"Just recently I was looking for some default message properties and how to read and write them inside a custom pipeline component. While searching I stumbled over a great post listing all the default message properties and how to read them.\nIf you want to access the properties in your custom pipeline component, you have to get the IBaseMessageContext object from the IBaseContext and use the Read method to get a value or the Write method to substitute a value with your own.","tags":null,"title":"Access message properties inside custom pipeline component"},{"categories":null,"contents":"I’ve just watched a clip from Channel9 featuring Eddie Churchill. In the video he demonstrates a prototype of the future BizTalk mapper. The new mapper will contain some very impressive features as I must say. Some of them make the life of the mapper a lot easier, especially when dealing with large maps.\nSome of the features which are shown in the video are:\n Different drawing densities for lines which are in view and which aren’t. Highlighting all lines coming from and going to a functoid when the functoid is selected. Automatic scrolling to elements when line or functoid is selected. Sibling coalesence, which folds unmapped elements so only the mapped elements are visible. Automapping or Intellimapping, which finds the best target or source element to map to based on a very intelligent algorithm. Scrollbar ticks, which identifies where in the document you can find things you’re interested in.  While watching the clip I could only thing of one thing: gimme gimme gimme!!! Unfortunately the new mapper will not be shipped with BizTalk 2006. When the mapper will be shipped is not yet known as this is just a prototype. It’s also highly possible that we see some features in other Microsoft Application before the mapper is even shipped.\nI recommend that every BizTalk engineer who hasn’t seen the video yet will watch it right away. You can find the clip here: http://channel9.msdn.com/Showpost.aspx?postid=126990\n","date":"November 1, 2005","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2005/11/biztalks-sexy-new-xslt-mapper/","summary":"I’ve just watched a clip from Channel9 featuring Eddie Churchill. In the video he demonstrates a prototype of the future BizTalk mapper. The new mapper will contain some very impressive features as I must say. Some of them make the life of the mapper a lot easier, especially when dealing with large maps.\nSome of the features which are shown in the video are:\n Different drawing densities for lines which are in view and which aren’t.","tags":null,"title":"BizTalk\u0026#039;s sexy new XSLT mapper"},{"categories":null,"contents":"I heard it from collegues who went to the PDC a couple of weeks ago. But I heard it myself at the BPI \u0026amp; Workflow conference earlier this october. The new workflow designer that Workflow Foundation features will substitute the good ol’ orchestration designer in BizTalk vNext. This means that in the near future BizTalk Server and Workflow Foundation will grow to each other and will make a very strong team in delivering high available and reliable business solution. If only I could fastforward a couple of years!\n","date":"October 24, 2005","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2005/10/workflow-designer-will-substitute-orchestration-designer-in-biztalk-vnext/","summary":"I heard it from collegues who went to the PDC a couple of weeks ago. But I heard it myself at the BPI \u0026amp; Workflow conference earlier this october. The new workflow designer that Workflow Foundation features will substitute the good ol’ orchestration designer in BizTalk vNext. This means that in the near future BizTalk Server and Workflow Foundation will grow to each other and will make a very strong team in delivering high available and reliable business solution.","tags":null,"title":"Workflow designer will substitute orchestration designer in BizTalk vNext"},{"categories":null,"contents":"A few weeks ago Kevin Smith (UK MCS Service Line Architect) released the second version of BizUnit. BizUnit is a framework for the automation of functional and regression testing of BizTalk solutions. Just think of NUnit ;).\nThe .MSI can be downloaded here: http://workspaces.gotdotnet.com/bizunit\nIt has a number of enhancements over the previous version that you can read about here: http://blogs.msdn.com/kevinsmi/archive/2005/07/17/439728.aspx.\nBizUnit can be used in conjunction with Jason Births ‘Orchestration Profiler’ to ensure that a solution has an adequate level of test coverage allowing it to be deployed with confidence. The Orchestration Profiler can be downloaded here: http://workspaces.gotdotnet.com/orchprof\nUnfortunately I still haven’t had the time to look at this and to try it out before using it in a project situation. It’s high on my ‘try before you die’-list though.\n","date":"October 24, 2005","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2005/10/bizunit-20-released/","summary":"A few weeks ago Kevin Smith (UK MCS Service Line Architect) released the second version of BizUnit. BizUnit is a framework for the automation of functional and regression testing of BizTalk solutions. Just think of NUnit ;).\nThe .MSI can be downloaded here: http://workspaces.gotdotnet.com/bizunit\nIt has a number of enhancements over the previous version that you can read about here: http://blogs.msdn.com/kevinsmi/archive/2005/07/17/439728.aspx.\nBizUnit can be used in conjunction with Jason Births ‘Orchestration Profiler’ to ensure that a solution has an adequate level of test coverage allowing it to be deployed with confidence.","tags":null,"title":"BizUnit 2.0 released"},{"categories":null,"contents":"I don’t believe any of you guys missed this, but about two months ago Microsoft released the first Beta of BizTalk Server 2006. Boy what a lot improvements are in the package. Here a short list of new or altered features:\n Much easier installation (next, next, finish) Single mmc for all your administration needs Easy creation of deployment packages (MSI generation) Single-touch developer deployment In order message processing Subscribe to and handle suspended messages Browse button for file locations (yeah, it still wasn’t there!) MOM improvements BizTalk API, so no more WMI hell Application concept which keeps all your artifacts together Some new and improved adapters And a lot more  During my attendance at the BPI \u0026amp; Workflow conference early october I had the change to play with this baby for a while and I must say that the improvements really tilt the product to another level.\nIn future posts I will dive into these new and improved features and explore them a little.\n","date":"October 24, 2005","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2005/10/biztalk-2006-beta-1/","summary":"I don’t believe any of you guys missed this, but about two months ago Microsoft released the first Beta of BizTalk Server 2006. Boy what a lot improvements are in the package. Here a short list of new or altered features:\n Much easier installation (next, next, finish) Single mmc for all your administration needs Easy creation of deployment packages (MSI generation) Single-touch developer deployment In order message processing Subscribe to and handle suspended messages Browse button for file locations (yeah, it still wasn’t there!","tags":null,"title":"BizTalk 2006 Beta 1"},{"categories":null,"contents":"Today I joined the web-log community and will, as many others, post my personal opinions and findings on various subjects, but specificly BizTalk Server. I’m an Avanade consultant working in the Netherlands and specialized in business process integration using BizTalk Server. This means a lot of information on this blog will be about BizTalk. Aside from that I’ll also keep you updated on some of my hobby’s like Windows Media Center, XBOX360 and whatever else comes to mind.\nBecause I wanted to start blogging sooner I already have some stuff lying around which I want to put up here. So, in the coming couple of days I will submit there posts which will get me up to speed!\n","date":"October 23, 2005","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/posts/2005/10/joining-the-overloaded-web-log-community/","summary":"Today I joined the web-log community and will, as many others, post my personal opinions and findings on various subjects, but specificly BizTalk Server. I’m an Avanade consultant working in the Netherlands and specialized in business process integration using BizTalk Server. This means a lot of information on this blog will be about BizTalk. Aside from that I’ll also keep you updated on some of my hobby’s like Windows Media Center, XBOX360 and whatever else comes to mind.","tags":null,"title":"Joining the overloaded web-log community"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://sschutten.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"}]