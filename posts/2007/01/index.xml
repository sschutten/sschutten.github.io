<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sander Schutten's Blog</title><link>https://sschutten.github.io/posts/2007/01/</link><description>Recent content on Sander Schutten's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 29 Jan 2007 11:22:05 +0000</lastBuildDate><atom:link href="https://sschutten.github.io/posts/2007/01/index.xml" rel="self" type="application/rss+xml"/><item><title>MCTS BizTalk Server 2006</title><link>https://sschutten.github.io/posts/2007/01/mcts-biztalk-server-2006/</link><pubDate>Mon, 29 Jan 2007 11:22:05 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/mcts-biztalk-server-2006/</guid><description>Today I passed the 70-235 exam, required for earning the MCTS BizTalk Server 2006 certification. About 20% of the questions was related to the Business Rule Engine (BRE) and another 15% to Business Activity Monitoring (BAM). The other questions were all general BizTalk questions, including some questions on Role Links. I found the exam a little difficult, mainly because I haven’t worked with the BRE that much and also haven’t used Role Links.</description></item><item><title>Playing Blog-Tag</title><link>https://sschutten.github.io/posts/2007/01/playing-blog-tag/</link><pubDate>Tue, 16 Jan 2007 14:41:52 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/playing-blog-tag/</guid><description>Jolly, they got me! Dennis just tagged me. At first I had no clue what it meant, but it seems a game of tag, and now I’m it. This means I have to write five things not much people know about me. So here it goes My girlfriend is Tamara Bos and we’re together for over 7.5 years now. She’s my first and only true love and we are very happy with each other, especially now we are living together in Almere since last october.</description></item><item><title>BizTalk shell extension</title><link>https://sschutten.github.io/posts/2007/01/biztalk-shell-extension/</link><pubDate>Fri, 05 Jan 2007 16:02:37 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/biztalk-shell-extension/</guid><description>I would like to share one interesting tool I came across. This is a tool for Viewing BizTalk Assemblies Deployed on BizTalk Server. Not only you can view the deployed assemblies but can also view the contents of the assembly by double clicking on assembly. Also you can dive deeper by double clicking the individual BizTalk Artifact where you can view more detailed info. Say if, you double click a schema of an assembly you will see the schema of that particular message.</description></item><item><title>BizTalk Troubleshooting Guide</title><link>https://sschutten.github.io/posts/2007/01/biztalk-troubleshooting-guide/</link><pubDate>Fri, 05 Jan 2007 15:53:21 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/biztalk-troubleshooting-guide/</guid><description>For beginners BizTalk can be really difficult to learn. They don’t know how to perform certain tasks and are stunned by a lot of (for them) cryptical warnings and errors. Luckily there’s the BizTalk Troubleshooting Guide which covers most (if not all) of the tasks, messages, tips, trics, know-hows and what else. Even for an experienced BizTalk enthousiast like me it contains a lot of interesting stuff. Use it as your BizTalk bible.</description></item><item><title>Accessing flat file content in orchestration</title><link>https://sschutten.github.io/posts/2007/01/accessing-flat-file-content-in-orchestration/</link><pubDate>Fri, 05 Jan 2007 15:42:00 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/accessing-flat-file-content-in-orchestration/</guid><description>Sometimes the requirement for your BizTalk solution is to receive a flat file (read: not xml) in your orchestration an do something with the data. An example could be receiving a PDF file and extracting some portions of data out of it. Some BizTalk developers already know that you can receive whatever file without treating it as XML by using System.Xml.XmlDocument as its message type (sounds silly doesn’t it?). After you’ve received the message you can’t access it as you normally do because it’s still a byte stream.</description></item><item><title>Storing configuration inside SSO database</title><link>https://sschutten.github.io/posts/2007/01/storing-configuration-inside-sso-database/</link><pubDate>Fri, 05 Jan 2007 15:16:14 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/storing-configuration-inside-sso-database/</guid><description>Maybe the simplest way to store configuration data for your BizTalk solution is to use the BTSNTSvc.exe.config file and the System.Configuration namespace to access that data. Most of the time I’m using this method on projects, but it introduces problems in BizTalk farms because you need to keep the configuration in sync. Another way would be to use a database, but that still requires a connection string to be present somewhere (again the BTSNTSvc.</description></item><item><title>BizTalk Adapter whitepaper</title><link>https://sschutten.github.io/posts/2007/01/biztalk-adapter-whitepaper/</link><pubDate>Fri, 05 Jan 2007 14:51:34 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/biztalk-adapter-whitepaper/</guid><description>Mike McKeown has a great blog where he elaborates on BizTalk Adapter development. He has some nice tutorials, howto’s and whitepapers listed on his blog. Some time ago he released a BizTalk Adapter developent whitepaper regarding transactional adapters and adapter base classes. You should definetely read this if you’re involved in developing new adapters. Also don’t forget to read his other material.</description></item><item><title>Pipeline Testing Framework for BTS06</title><link>https://sschutten.github.io/posts/2007/01/pipeline-testing-framework-for-bts06/</link><pubDate>Fri, 05 Jan 2007 14:44:26 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/pipeline-testing-framework-for-bts06/</guid><description>Tomas Restrepo wrote a really useful framework to test pipelines and pipeline components. Some time ago he released the first version of his framework and posted a couple of howto’s to get you started. It’s definitely worth stopping by his blog.</description></item><item><title>Using BAM API to create related activities</title><link>https://sschutten.github.io/posts/2007/01/using-bam-api-to-create-related-activities/</link><pubDate>Fri, 05 Jan 2007 14:37:20 +0000</pubDate><guid>https://sschutten.github.io/posts/2007/01/using-bam-api-to-create-related-activities/</guid><description>Check out this great post by Richard Seroter on using the BAM API to collect BAM data inside a loop, creating a hierarchy of activities. Not doing too much with the BAM API I found it a great way to understand it’s usage and flexibility.</description></item></channel></rss>